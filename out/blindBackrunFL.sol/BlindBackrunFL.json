{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wethAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "WETH_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "call",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "firstPairAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "secondPairAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "percentageToPayToCoinbase",
          "type": "uint256"
        }
      ],
      "name": "executeArbitrage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "firstPairData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "secondPairData",
          "type": "tuple"
        }
      ],
      "name": "getAmountIn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "firstPairData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "secondPairData",
          "type": "tuple"
        }
      ],
      "name": "getDenominator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "firstPairData",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reserve0",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "reserve1",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isWETHZero",
              "type": "bool"
            }
          ],
          "internalType": "struct IPairReserves.PairReserves",
          "name": "secondPairData",
          "type": "tuple"
        }
      ],
      "name": "getNumerator",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "makeFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "feeAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        }
      ],
      "name": "receiveFlashLoan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETHToOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawWETHToOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
<<<<<<< HEAD
<<<<<<< HEAD
    "object": "0x60a06040526103e56001553480156200001757600080fd5b5060405162002268380380620022688339810160408190526200003a91620000a9565b80620000463362000059565b6001600160a01b031660805250620000db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000bc57600080fd5b81516001600160a01b0381168114620000d457600080fd5b9392505050565b60805161213262000136600039600081816101160152818161048e015281816106d901528181610c5401528181610df601528181610eb3015281816110d80152818161116a0152818161134c01526116fa01526121326000f3fe6080604052600436106100c55760003560e01c806377432b8c1161007f578063ea3e506c11610059578063ea3e506c1461021a578063eb6b21161461022f578063f04f27071461024f578063f2fde38b1461026f57600080fd5b806377432b8c146101c75780638da5cb5b146101dc578063c9a69562146101fa57600080fd5b8062bb7d67146100d1578063040141e5146101045780631fa7d39b14610150578063650f84be146101705780636dbf2fa014610192578063715018a6146101b257600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f16100ec366004611a0f565b61028f565b6040519081526020015b60405180910390f35b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fb565b34801561015c57600080fd5b506100f161016b366004611a0f565b6103e2565b34801561017c57600080fd5b5061019061018b366004611a5a565b610476565b005b34801561019e57600080fd5b506101906101ad366004611b0b565b610f3a565b3480156101be57600080fd5b50610190610fed565b3480156101d357600080fd5b50610190611001565b3480156101e857600080fd5b506000546001600160a01b0316610138565b34801561020657600080fd5b50610190610215366004611c57565b61103c565b34801561022657600080fd5b506101906110b8565b34801561023b57600080fd5b506100f161024a366004611a0f565b6111df565b34801561025b57600080fd5b5061019061026a366004611cd5565b611278565b34801561027b57600080fd5b5061019061028a366004611d82565b611447565b606082015160009015156001036103805760006102e584600001516102df85602001516102df87600001516102d98a602001516102d96001546001546114c090919063ffffffff16565b906114c0565b906114d3565b90506103146040518060400160405280600b81526020016a707265737172743a20257360a81b815250826114df565b61034f60405180604001604052806011815260200170737172742870726573717274293a20257360781b81525061034a83611524565b6114df565b600061037685600001516102d986602001516102d96103e861037088611524565b90611570565b92506103dc915050565b60006103b984602001516102df85600001516102df87602001516102d98a600001516102d96001546001546114c090919063ffffffff16565b9050600061037685602001516102d986600001516102d96103e861037088611524565b92915050565b6060820151600090151560010361044557600061043c61041785602001516102d96001546001546114c090919063ffffffff16565b6104366103e86102d987602001516001546114c090919063ffffffff16565b9061157c565b91506103dc9050565b825160015460009161043c9161046091906102d990806114c0565b8451600154610436916103e8916102d9916114c0565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611d9f565b905061053b604051806040016040528060168152602001755374617274696e672062616c616e636520203a20257360501b815250826114df565b60408051808201909152601e81527f0a2d2d2d2d2d2d2d2d2d20504149522044415441202d2d2d2d2d2d2d2d2d000060208201528490849061057c90611588565b6000610587836115cb565b90506000610594836115cb565b90506105d46040518060400160405280601b81526020017f0a2d2d2d2d2d2d2d2d2d20505249434553202d2d2d2d2d2d2d2d2d0000000000815250611588565b610610604051806040016040528060168152602001756669727374506169722070726963652020203a20257360501b81525083604001516114df565b61064c604051806040016040528060168152602001757365636f6e645061697220707269636520203a20257360501b81525082604001516114df565b600061065883836111df565b905061067b6040518060600160405280602281526020016120db60229139611588565b6106b360405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250826114df565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611db8565b506000808460600151151560011515036109a15761076d83866000015187602001516117f2565b915061078282856020015186600001516117f2565b90506107bc60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b6107f46040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b602082015261082f9061034a8386611570565b61086d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f9061089e9060009086908f90600401611dd5565b600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b5050505061090460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f906109359084906000903090600401611dd5565b600060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b5050505061099c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b610c3c565b6109b483866020015187600001516117f2565b91506109c982856000015186602001516117f2565b90506109ec6040518060600160405280602281526020016120db60229139611588565b610a2460405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250846114df565b610a5c60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b610a946040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b6020820152610acf9061034a8386611570565b610b0d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f90610b3e9085906000908f90600401611dd5565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050610ba460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f90610bd59060009085903090600401611dd5565b600060405180830381600087803b158015610bef57600080fd5b505af1158015610c03573d6000803e3d6000fd5b50505050610c3c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611d9f565b9050888111610d105760405162461bcd60e51b815260206004820152601060248201526f105c989a5d1c9859d94819985a5b195960821b60448201526064015b60405180910390fd5b610d4e6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2053554343455353202d2d2d2d2d2d2d2d2d00000000815250611588565b610d8660405180604001604052806016815260200175456e64696e672062616c616e6365202020203a20257360501b815250826114df565b6000610d92828b611570565b9050610dcc6040518060400160405280601681526020017550726f6669742020202020202020202020203a20257360501b815250826114df565b6000610ddd60646102df848f6114c0565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505060405141925083156108fc02915083906000818181858888f19350505050158015610e87573d6000803e3d6000fd5b506000610e948383611570565b60405163a9059cbb60e01b8152326004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611db8565b50505050505050505050505050505050565b610f4261183a565b6000836001600160a01b03168383604051610f5d9190611e2f565b60006040518083038185875af1925050503d8060008114610f9a576040519150601f19603f3d011682016040523d82523d6000602084013e610f9f565b606091505b5050905080610fe75760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b6044820152606401610d07565b50505050565b610ff561183a565b610fff6000611894565b565b61100961183a565b6040514790339082156108fc029083906000818181858888f19350505050158015611038573d6000803e3d6000fd5b5050565b61104461183a565b604051632e1c224f60e11b815273ba12222222228d8ba445958a75a0704d566bf2c890635c38449e90611081903090879087908790600401611e77565b600060405180830381600087803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b50505050505050565b6110c061183a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190611d9f565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611db8565b6000806111ec848461028f565b905061121d6040518060400160405280600d81526020016c6e756d657261746f723a20257360981b815250826114df565b600061122985856103e2565b905061125c6040518060400160405280600f81526020016e64656e6f6d696e61746f723a20257360881b815250826114df565b600061126e826102df856103e86114c0565b9695505050505050565b3373ba12222222228d8ba445958a75a0704d566bf2c8146112ef5760405162461bcd60e51b815260206004820152602b60248201527f466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f60448201526a1d081d1a19481d985d5b1d60aa1b6064820152608401610d07565b6113206040518060400160405280601081526020016f3932b1b2b4bb32a33630b9b42637b0b760811b815250611588565b6000806000838060200190518101906113399190611f13565b92509250925061134a828483610476565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876000815181106113a1576113a1611f56565b6020026020010151896000815181106113bc576113bc611f56565b60200260200101516113ce9190611f82565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190611db8565b5050505050505050565b61144f61183a565b6001600160a01b0381166114b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d07565b6114bd81611894565b50565b60006114cc8284611f9a565b9392505050565b60006114cc8284611fb9565b61103882826040516024016114f5929190611fdb565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526118e4565b60008160000361153657506000919050565b600061154860026102df85600161157c565b9050825b808210156114cc57508061156960026102df8361043688826114d3565b915061154c565b60006114cc8284611ffd565b60006114cc8284611f82565b6114bd8160405160240161159c9190612014565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118e4565b6115f860405180608001604052806000815260200160008152602001600081526020016000151581525090565b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612043565b506001600160701b031691506001600160701b0316915061169b604051806040016040528060058152602001643830b4b91d60d91b81525085611905565b6116c6604051806040016040528060098152602001683932b9b2b93b32981d60b91b815250836114df565b6116f1604051806040016040528060098152602001683932b9b2b93b32989d60b91b815250826114df565b600080600090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117849190612093565b6001600160a01b0316036117b3576117a8846102df85670de0b6b3a76400006114c0565b9150600190506117cc565b6117c9836102df86670de0b6b3a76400006114c0565b91505b604080516080810182529485526020850193909352918301521515606082015292915050565b600080611801856103e56114c0565b9050600061180f82856114c0565b9050600061182383610436886103e86114c0565b905061182f8183611fb9565b979650505050505050565b6000546001600160a01b03163314610fff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b611038828260405160240161191b9291906120b0565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526118e4565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119895761198961194a565b604052919050565b80151581146114bd57600080fd5b6000608082840312156119b157600080fd5b6040516080810181811067ffffffffffffffff821117156119d4576119d461194a565b80604052508091508235815260208301356020820152604083013560408201526060830135611a0281611991565b6060919091015292915050565b6000806101008385031215611a2357600080fd5b611a2d848461199f565b9150611a3c846080850161199f565b90509250929050565b6001600160a01b03811681146114bd57600080fd5b600080600060608486031215611a6f57600080fd5b8335611a7a81611a45565b92506020840135611a8a81611a45565b929592945050506040919091013590565b600082601f830112611aac57600080fd5b813567ffffffffffffffff811115611ac657611ac661194a565b611ad9601f8201601f1916602001611960565b818152846020838601011115611aee57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611b2057600080fd5b8335611b2b81611a45565b925060208401359150604084013567ffffffffffffffff811115611b4e57600080fd5b611b5a86828701611a9b565b9150509250925092565b600067ffffffffffffffff821115611b7e57611b7e61194a565b5060051b60200190565b600082601f830112611b9957600080fd5b81356020611bae611ba983611b64565b611960565b82815260059290921b84018101918181019086841115611bcd57600080fd5b8286015b84811015611bf1578035611be481611a45565b8352918301918301611bd1565b509695505050505050565b600082601f830112611c0d57600080fd5b81356020611c1d611ba983611b64565b82815260059290921b84018101918181019086841115611c3c57600080fd5b8286015b84811015611bf15780358352918301918301611c40565b600080600060608486031215611c6c57600080fd5b833567ffffffffffffffff80821115611c8457600080fd5b611c9087838801611b88565b94506020860135915080821115611ca657600080fd5b611cb287838801611bfc565b93506040860135915080821115611cc857600080fd5b50611b5a86828701611a9b565b60008060008060808587031215611ceb57600080fd5b843567ffffffffffffffff80821115611d0357600080fd5b611d0f88838901611b88565b95506020870135915080821115611d2557600080fd5b611d3188838901611bfc565b94506040870135915080821115611d4757600080fd5b611d5388838901611bfc565b93506060870135915080821115611d6957600080fd5b50611d7687828801611a9b565b91505092959194509250565b600060208284031215611d9457600080fd5b81356114cc81611a45565b600060208284031215611db157600080fd5b5051919050565b600060208284031215611dca57600080fd5b81516114cc81611991565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b60005b83811015611e1e578181015183820152602001611e06565b83811115610fe75750506000910152565b60008251611e41818460208701611e03565b9190910192915050565b60008151808452611e63816020860160208601611e03565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611ec5578551851683529483019491830191600101611ea7565b5050858103604087015287518082529082019350915080870160005b83811015611efd57815185529382019390820190600101611ee1565b50505050828103606084015261182f8185611e4b565b600080600060608486031215611f2857600080fd5b8351611f3381611a45565b6020850151909350611f4481611a45565b80925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611f9557611f95611f6c565b500190565b6000816000190483118215151615611fb457611fb4611f6c565b500290565b600082611fd657634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611fee6040830185611e4b565b90508260208301529392505050565b60008282101561200f5761200f611f6c565b500390565b6020815260006114cc6020830184611e4b565b80516001600160701b038116811461203e57600080fd5b919050565b60008060006060848603121561205857600080fd5b61206184612027565b925061206f60208501612027565b9150604084015163ffffffff8116811461208857600080fd5b809150509250925092565b6000602082840312156120a557600080fd5b81516114cc81611a45565b6040815260006120c36040830185611e4b565b905060018060a01b0383166020830152939250505056fe0a2d2d2d2d2d2d2d2d2d20545241444520414d4f554e5453202d2d2d2d2d2d2d2d2da26469706673582212203a5020697b87f538eac82eeeb24dab257ed00103d26852aae431eb9ab706d9d864736f6c634300080f0033",
    "sourceMap": "1140:1255:26:-:0;;;908:3:23;885:26;;1304:63:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1351:12;936:32:0;719:10:4;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1010:27:23;;;-1:-1:-1;1140:1255:26;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:28:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;1140:1255:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c55760003560e01c806377432b8c1161007f578063ea3e506c11610059578063ea3e506c1461021a578063eb6b21161461022f578063f04f27071461024f578063f2fde38b1461026f57600080fd5b806377432b8c146101c75780638da5cb5b146101dc578063c9a69562146101fa57600080fd5b8062bb7d67146100d1578063040141e5146101045780631fa7d39b14610150578063650f84be146101705780636dbf2fa014610192578063715018a6146101b257600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f16100ec366004611a0f565b61028f565b6040519081526020015b60405180910390f35b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fb565b34801561015c57600080fd5b506100f161016b366004611a0f565b6103e2565b34801561017c57600080fd5b5061019061018b366004611a5a565b610476565b005b34801561019e57600080fd5b506101906101ad366004611b0b565b610f3a565b3480156101be57600080fd5b50610190610fed565b3480156101d357600080fd5b50610190611001565b3480156101e857600080fd5b506000546001600160a01b0316610138565b34801561020657600080fd5b50610190610215366004611c57565b61103c565b34801561022657600080fd5b506101906110b8565b34801561023b57600080fd5b506100f161024a366004611a0f565b6111df565b34801561025b57600080fd5b5061019061026a366004611cd5565b611278565b34801561027b57600080fd5b5061019061028a366004611d82565b611447565b606082015160009015156001036103805760006102e584600001516102df85602001516102df87600001516102d98a602001516102d96001546001546114c090919063ffffffff16565b906114c0565b906114d3565b90506103146040518060400160405280600b81526020016a707265737172743a20257360a81b815250826114df565b61034f60405180604001604052806011815260200170737172742870726573717274293a20257360781b81525061034a83611524565b6114df565b600061037685600001516102d986602001516102d96103e861037088611524565b90611570565b92506103dc915050565b60006103b984602001516102df85600001516102df87602001516102d98a600001516102d96001546001546114c090919063ffffffff16565b9050600061037685602001516102d986600001516102d96103e861037088611524565b92915050565b6060820151600090151560010361044557600061043c61041785602001516102d96001546001546114c090919063ffffffff16565b6104366103e86102d987602001516001546114c090919063ffffffff16565b9061157c565b91506103dc9050565b825160015460009161043c9161046091906102d990806114c0565b8451600154610436916103e8916102d9916114c0565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611d9f565b905061053b604051806040016040528060168152602001755374617274696e672062616c616e636520203a20257360501b815250826114df565b60408051808201909152601e81527f0a2d2d2d2d2d2d2d2d2d20504149522044415441202d2d2d2d2d2d2d2d2d000060208201528490849061057c90611588565b6000610587836115cb565b90506000610594836115cb565b90506105d46040518060400160405280601b81526020017f0a2d2d2d2d2d2d2d2d2d20505249434553202d2d2d2d2d2d2d2d2d0000000000815250611588565b610610604051806040016040528060168152602001756669727374506169722070726963652020203a20257360501b81525083604001516114df565b61064c604051806040016040528060168152602001757365636f6e645061697220707269636520203a20257360501b81525082604001516114df565b600061065883836111df565b905061067b6040518060600160405280602281526020016120db60229139611588565b6106b360405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250826114df565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611db8565b506000808460600151151560011515036109a15761076d83866000015187602001516117f2565b915061078282856020015186600001516117f2565b90506107bc60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b6107f46040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b602082015261082f9061034a8386611570565b61086d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f9061089e9060009086908f90600401611dd5565b600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b5050505061090460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f906109359084906000903090600401611dd5565b600060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b5050505061099c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b610c3c565b6109b483866020015187600001516117f2565b91506109c982856000015186602001516117f2565b90506109ec6040518060600160405280602281526020016120db60229139611588565b610a2460405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250846114df565b610a5c60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b610a946040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b6020820152610acf9061034a8386611570565b610b0d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f90610b3e9085906000908f90600401611dd5565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050610ba460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f90610bd59060009085903090600401611dd5565b600060405180830381600087803b158015610bef57600080fd5b505af1158015610c03573d6000803e3d6000fd5b50505050610c3c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611d9f565b9050888111610d105760405162461bcd60e51b815260206004820152601060248201526f105c989a5d1c9859d94819985a5b195960821b60448201526064015b60405180910390fd5b610d4e6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2053554343455353202d2d2d2d2d2d2d2d2d00000000815250611588565b610d8660405180604001604052806016815260200175456e64696e672062616c616e6365202020203a20257360501b815250826114df565b6000610d92828b611570565b9050610dcc6040518060400160405280601681526020017550726f6669742020202020202020202020203a20257360501b815250826114df565b6000610ddd60646102df848f6114c0565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505060405141925083156108fc02915083906000818181858888f19350505050158015610e87573d6000803e3d6000fd5b506000610e948383611570565b60405163a9059cbb60e01b8152326004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611db8565b50505050505050505050505050505050565b610f4261183a565b6000836001600160a01b03168383604051610f5d9190611e2f565b60006040518083038185875af1925050503d8060008114610f9a576040519150601f19603f3d011682016040523d82523d6000602084013e610f9f565b606091505b5050905080610fe75760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b6044820152606401610d07565b50505050565b610ff561183a565b610fff6000611894565b565b61100961183a565b6040514790339082156108fc029083906000818181858888f19350505050158015611038573d6000803e3d6000fd5b5050565b61104461183a565b604051632e1c224f60e11b815273ba12222222228d8ba445958a75a0704d566bf2c890635c38449e90611081903090879087908790600401611e77565b600060405180830381600087803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b50505050505050565b6110c061183a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190611d9f565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611db8565b6000806111ec848461028f565b905061121d6040518060400160405280600d81526020016c6e756d657261746f723a20257360981b815250826114df565b600061122985856103e2565b905061125c6040518060400160405280600f81526020016e64656e6f6d696e61746f723a20257360881b815250826114df565b600061126e826102df856103e86114c0565b9695505050505050565b3373ba12222222228d8ba445958a75a0704d566bf2c8146112ef5760405162461bcd60e51b815260206004820152602b60248201527f466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f60448201526a1d081d1a19481d985d5b1d60aa1b6064820152608401610d07565b6113206040518060400160405280601081526020016f3932b1b2b4bb32a33630b9b42637b0b760811b815250611588565b6000806000838060200190518101906113399190611f13565b92509250925061134a828483610476565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876000815181106113a1576113a1611f56565b6020026020010151896000815181106113bc576113bc611f56565b60200260200101516113ce9190611f82565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190611db8565b5050505050505050565b61144f61183a565b6001600160a01b0381166114b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d07565b6114bd81611894565b50565b60006114cc8284611f9a565b9392505050565b60006114cc8284611fb9565b61103882826040516024016114f5929190611fdb565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526118e4565b60008160000361153657506000919050565b600061154860026102df85600161157c565b9050825b808210156114cc57508061156960026102df8361043688826114d3565b915061154c565b60006114cc8284611ffd565b60006114cc8284611f82565b6114bd8160405160240161159c9190612014565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118e4565b6115f860405180608001604052806000815260200160008152602001600081526020016000151581525090565b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612043565b506001600160701b031691506001600160701b0316915061169b604051806040016040528060058152602001643830b4b91d60d91b81525085611905565b6116c6604051806040016040528060098152602001683932b9b2b93b32981d60b91b815250836114df565b6116f1604051806040016040528060098152602001683932b9b2b93b32989d60b91b815250826114df565b600080600090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117849190612093565b6001600160a01b0316036117b3576117a8846102df85670de0b6b3a76400006114c0565b9150600190506117cc565b6117c9836102df86670de0b6b3a76400006114c0565b91505b604080516080810182529485526020850193909352918301521515606082015292915050565b600080611801856103e56114c0565b9050600061180f82856114c0565b9050600061182383610436886103e86114c0565b905061182f8183611fb9565b979650505050505050565b6000546001600160a01b03163314610fff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b611038828260405160240161191b9291906120b0565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526118e4565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119895761198961194a565b604052919050565b80151581146114bd57600080fd5b6000608082840312156119b157600080fd5b6040516080810181811067ffffffffffffffff821117156119d4576119d461194a565b80604052508091508235815260208301356020820152604083013560408201526060830135611a0281611991565b6060919091015292915050565b6000806101008385031215611a2357600080fd5b611a2d848461199f565b9150611a3c846080850161199f565b90509250929050565b6001600160a01b03811681146114bd57600080fd5b600080600060608486031215611a6f57600080fd5b8335611a7a81611a45565b92506020840135611a8a81611a45565b929592945050506040919091013590565b600082601f830112611aac57600080fd5b813567ffffffffffffffff811115611ac657611ac661194a565b611ad9601f8201601f1916602001611960565b818152846020838601011115611aee57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611b2057600080fd5b8335611b2b81611a45565b925060208401359150604084013567ffffffffffffffff811115611b4e57600080fd5b611b5a86828701611a9b565b9150509250925092565b600067ffffffffffffffff821115611b7e57611b7e61194a565b5060051b60200190565b600082601f830112611b9957600080fd5b81356020611bae611ba983611b64565b611960565b82815260059290921b84018101918181019086841115611bcd57600080fd5b8286015b84811015611bf1578035611be481611a45565b8352918301918301611bd1565b509695505050505050565b600082601f830112611c0d57600080fd5b81356020611c1d611ba983611b64565b82815260059290921b84018101918181019086841115611c3c57600080fd5b8286015b84811015611bf15780358352918301918301611c40565b600080600060608486031215611c6c57600080fd5b833567ffffffffffffffff80821115611c8457600080fd5b611c9087838801611b88565b94506020860135915080821115611ca657600080fd5b611cb287838801611bfc565b93506040860135915080821115611cc857600080fd5b50611b5a86828701611a9b565b60008060008060808587031215611ceb57600080fd5b843567ffffffffffffffff80821115611d0357600080fd5b611d0f88838901611b88565b95506020870135915080821115611d2557600080fd5b611d3188838901611bfc565b94506040870135915080821115611d4757600080fd5b611d5388838901611bfc565b93506060870135915080821115611d6957600080fd5b50611d7687828801611a9b565b91505092959194509250565b600060208284031215611d9457600080fd5b81356114cc81611a45565b600060208284031215611db157600080fd5b5051919050565b600060208284031215611dca57600080fd5b81516114cc81611991565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b60005b83811015611e1e578181015183820152602001611e06565b83811115610fe75750506000910152565b60008251611e41818460208701611e03565b9190910192915050565b60008151808452611e63816020860160208601611e03565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611ec5578551851683529483019491830191600101611ea7565b5050858103604087015287518082529082019350915080870160005b83811015611efd57815185529382019390820190600101611ee1565b50505050828103606084015261182f8185611e4b565b600080600060608486031215611f2857600080fd5b8351611f3381611a45565b6020850151909350611f4481611a45565b80925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611f9557611f95611f6c565b500190565b6000816000190483118215151615611fb457611fb4611f6c565b500290565b600082611fd657634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611fee6040830185611e4b565b90508260208301529392505050565b60008282101561200f5761200f611f6c565b500390565b6020815260006114cc6020830184611e4b565b80516001600160701b038116811461203e57600080fd5b919050565b60008060006060848603121561205857600080fd5b61206184612027565b925061206f60208501612027565b9150604084015163ffffffff8116811461208857600080fd5b809150509250925092565b6000602082840312156120a557600080fd5b81516114cc81611a45565b6040815260006120c36040830185611e4b565b905060018060a01b0383166020830152939250505056fe0a2d2d2d2d2d2d2d2d2d20545241444520414d4f554e5453202d2d2d2d2d2d2d2d2da26469706673582212203a5020697b87f538eac82eeeb24dab257ed00103d26852aae431eb9ab706d9d864736f6c634300080f0033",
    "sourceMap": "1140:1255:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5914:1457:23;;;;;;;;;;-1:-1:-1;5914:1457:23;;;;;:::i;:::-;;:::i;:::-;;;1750:25:28;;;1738:2;1723:18;5914:1457:23;;;;;;;;922:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1950:32:28;;;1932:51;;1920:2;1905:18;922:37:23;1786:203:28;7377:1027:23;;;;;;;;;;-1:-1:-1;7377:1027:23;;;;;:::i;:::-;;:::i;1395:3608::-;;;;;;;;;;-1:-1:-1;1395:3608:23;;;;;:::i;:::-;;:::i;:::-;;11497:206;;;;;;;;;;-1:-1:-1;11497:206:23;;;;;:::i;:::-;;:::i;1824:101:0:-;;;;;;;;;;;;;:::i;10960:152:23:-;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1373:210:26;;;;;;;;;;-1:-1:-1;1373:210:26;;;;;:::i;:::-;;:::i;10625:190:23:-;;;;;;;;;;;;;:::i;5346:562::-;;;;;;;;;;-1:-1:-1;5346:562:23;;;;;:::i;:::-;;:::i;1589:804:26:-;;;;;;;;;;-1:-1:-1;1589:804:26;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;5914:1457:23:-;6102:24;;;;6079:7;;6102:32;;6130:4;6102:32;6098:1267;;6150:12;6182:249;6408:13;:22;;;6182:200;6358:14;:23;;;6182:150;6308:14;:23;;;6182:100;6259:13;:22;;;6182:51;6220:12;;6182;;:37;;:51;;;;:::i;:::-;:76;;:100::i;:150::-;:175;;:200::i;:249::-;6150:281;;6445:35;;;;;;;;;;;;;;-1:-1:-1;;;6445:35:23;;;6472:7;6445:11;:35::i;:::-;6494:47;;;;;;;;;;;;;;-1:-1:-1;;;6494:47:23;;;6527:13;6532:7;6527:4;:13::i;:::-;6494:11;:47::i;:::-;6555:17;6588:166;6731:13;:22;;;6588:125;6689:14;:23;;;6606:39;6641:3;6606:13;6611:7;6606:4;:13::i;:::-;:34;;:39::i;6588:166::-;6555:199;-1:-1:-1;6769:16:23;;-1:-1:-1;;6769:16:23;6098:1267;6816:12;6848:249;7074:13;:22;;;6848:200;7024:14;:23;;;6848:150;6974:14;:23;;;6848:100;6925:13;:22;;;6848:51;6886:12;;6848;;:37;;:51;;;;:::i;:249::-;6816:281;;7124:17;7157:166;7300:13;:22;;;7157:125;7258:14;:23;;;7175:39;7210:3;7175:13;7180:7;7175:4;:13::i;6098:1267::-;5914:1457;;;;:::o;7377:1027::-;7578:24;;;;7556:7;;7578:32;;7606:4;7578:32;7574:824;;7626:19;7665:294;7841:100;7918:13;:22;;;7841:51;7879:12;;7841;;:37;;:51;;;;:::i;:100::-;7687:93;7775:4;7687:62;7725:14;:23;;;7687:12;;:37;;:62;;;;:::i;:93::-;7665:154;;:294::i;:::-;7626:333;-1:-1:-1;7973:18:23;;-1:-1:-1;7973:18:23;7574:824;8314:22;;8275:12;;8022:19;;8061:294;;8237:100;;8314:22;8237:51;;8275:12;8237:37;:51::i;:100::-;8121:23;;8083:12;;:93;;8171:4;;8083:62;;:37;:62::i;1395:3608::-;1577:45;;-1:-1:-1;;;1577:45:23;;1616:4;1577:45;;;1932:51:28;1553:21:23;;1584:12;-1:-1:-1;;;;;1577:30:23;;;;1905:18:28;;1577:45:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:69;;1632:52;;;;;;;;;;;;;;-1:-1:-1;;;1632:52:23;;;1670:13;1632:11;:52::i;:::-;1835:46;;;;;;;;;;;;;;;;;1736:16;;1806:17;;1835:46;;:11;:46::i;:::-;1892:47;1942:22;1954:9;1942:11;:22::i;:::-;1892:72;;1974:48;2025:23;2037:10;2025:11;:23::i;:::-;1974:74;;2059:43;;;;;;;;;;;;;;;;;;:11;:43::i;:::-;2112:58;;;;;;;;;;;;;;-1:-1:-1;;;2112:58:23;;;2150:13;:19;;;2112:11;:58::i;:::-;2180:59;;;;;;;;;;;;;;-1:-1:-1;;;2180:59:23;;;2218:14;:20;;;2180:11;:59::i;:::-;2250:16;2269:42;2281:13;2296:14;2269:11;:42::i;:::-;2250:61;;2325:50;;;;;;;;;;;;;;;;;;:11;:50::i;:::-;2389:47;;;;;;;;;;;;;;-1:-1:-1;;;2389:47:23;;;2427:8;2389:11;:47::i;:::-;2447:57;;-1:-1:-1;;;2447:57:23;;-1:-1:-1;;;;;7791:32:28;;;2447:57:23;;;7773:51:28;7840:18;;;7833:34;;;2454:12:23;2447:29;;;;7746:18:28;;2447:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2523:26;2559:22;2595:13;:24;;;:32;;2623:4;2595:32;;;2591:1715;;2663:70;2676:8;2686:13;:22;;;2710:13;:22;;;2663:12;:70::i;:::-;2642:91;;2764:82;2777:18;2797:14;:23;;;2822:14;:23;;;2764:12;:82::i;:::-;2747:99;;2861:57;;;;;;;;;;;;;;-1:-1:-1;;;2861:57:23;;;2899:18;2861:11;:57::i;:::-;2932:53;;;;;;;;;;;;;;-1:-1:-1;;;2932:53:23;;;2970:14;2932:11;:53::i;:::-;2999:69;;;;;;;;;;;;-1:-1:-1;;;2999:69:23;;;;;;3038:28;:14;3057:8;3038:18;:28::i;2999:69::-;3095:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;3154:60;;-1:-1:-1;;;3154:60:23;;-1:-1:-1;;;;;3154:14:23;;;;;:60;;3169:1;;3172:18;;3192:17;;3154:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:34;;;;;;;;;;;;;;-1:-1:-1;;;3228:34:23;;;:11;:34::i;:::-;3289:53;;-1:-1:-1;;;3289:53:23;;-1:-1:-1;;;;;3289:15:23;;;;;:53;;3305:14;;3321:1;;3332:4;;3289:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:35;;;;;;;;;;;;;;-1:-1:-1;;;3356:35:23;;;:11;:35::i;:::-;2591:1715;;;3443:70;3456:8;3466:13;:22;;;3490:13;:22;;;3443:12;:70::i;:::-;3422:91;;3544:82;3557:18;3577:14;:23;;;3602:14;:23;;;3544:12;:82::i;:::-;3527:99;;3640:50;;;;;;;;;;;;;;;;;;:11;:50::i;:::-;3704:47;;;;;;;;;;;;;;-1:-1:-1;;;3704:47:23;;;3742:8;3704:11;:47::i;:::-;3765:57;;;;;;;;;;;;;;-1:-1:-1;;;3765:57:23;;;3803:18;3765:11;:57::i;:::-;3836:53;;;;;;;;;;;;;;-1:-1:-1;;;3836:53:23;;;3874:14;3836:11;:53::i;:::-;3903:69;;;;;;;;;;;;-1:-1:-1;;;3903:69:23;;;;;;3942:28;:14;3961:8;3942:18;:28::i;3903:69::-;3999:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;4058:60;;-1:-1:-1;;;4058:60:23;;-1:-1:-1;;;;;4058:14:23;;;;;:60;;4073:18;;4093:1;;4096:17;;4058:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4132:34;;;;;;;;;;;;;;-1:-1:-1;;;4132:34:23;;;:11;:34::i;:::-;4193:53;;-1:-1:-1;;;4193:53:23;;-1:-1:-1;;;;;4193:15:23;;;;;:53;;4209:1;;4212:14;;4236:4;;4193:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:35;;;;;;;;;;;;;;-1:-1:-1;;;4260:35:23;;;:11;:35::i;:::-;4347:45;;-1:-1:-1;;;4347:45:23;;4386:4;4347:45;;;1932:51:28;4324:20:23;;4354:12;-1:-1:-1;;;;;4347:30:23;;;;1905:18:28;;4347:45:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4324:68;;4425:13;4410:12;:28;4402:57;;;;-1:-1:-1;;;4402:57:23;;9406:2:28;4402:57:23;;;9388:21:28;9445:2;9425:18;;;9418:30;-1:-1:-1;;;9464:18:28;;;9457:46;9520:18;;4402:57:23;;;;;;;;;4469:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;4523:51;;;;;;;;;;;;;;-1:-1:-1;;;4523:51:23;;;4561:12;4523:11;:51::i;:::-;4584:11;4598:31;:12;4615:13;4598:16;:31::i;:::-;4584:45;;4639;;;;;;;;;;;;;;-1:-1:-1;;;4639:45:23;;;4677:6;4639:11;:45::i;:::-;4694:21;4718:46;4760:3;4718:37;:6;4729:25;4718:10;:37::i;:46::-;4774;;-1:-1:-1;;;4774:46:23;;;;;1750:25:28;;;4694:70:23;;-1:-1:-1;4780:12:23;-1:-1:-1;;;;;4774:28:23;;;;1723:18:28;;4774:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4830:41:23;;:14;;-1:-1:-1;4830:41:23;;;;;-1:-1:-1;4854:16:23;;4830:41;;;;4854:16;4830:14;:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4881:19:23;4903:28;:6;4914:16;4903:10;:28::i;:::-;4941:55;;-1:-1:-1;;;4941:55:23;;4970:9;4941:55;;;7773:51:28;7840:18;;;7833:34;;;4881:50:23;;-1:-1:-1;4947:12:23;-1:-1:-1;;;;;4941:28:23;;;;7746:18:28;;4941:55:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1543:3460;;;;;;;;;;;;1395:3608;;;:::o;11497:206::-;1094:13:0;:11;:13::i;:::-;11598:12:23::1;11616:3;-1:-1:-1::0;;;;;11616:8:23::1;11632:6;11640:5;11616:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11597:49;;;11664:7;11656:40;;;::::0;-1:-1:-1;;;11656:40:23;;10293:2:28;11656:40:23::1;::::0;::::1;10275:21:28::0;10332:2;10312:18;;;10305:30;-1:-1:-1;;;10351:18:28;;;10344:50;10411:18;;11656:40:23::1;10091:344:28::0;11656:40:23::1;11587:116;11497:206:::0;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;10960:152:23:-;1094:13:0;:11;:13::i;:::-;11068:37:23::1;::::0;11037:21:::1;::::0;11076:10:::1;::::0;11068:37;::::1;;;::::0;11037:21;;11019:15:::1;11068:37:::0;11019:15;11068:37;11037:21;11076:10;11068:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;11009:103;10960:152::o:0;1373:210:26:-;1094:13:0;:11;:13::i;:::-;1528:48:26::1;::::0;-1:-1:-1;;;1528:48:26;;1254:42:::1;::::0;1528:15:::1;::::0;:48:::1;::::0;1544:4:::1;::::0;1550:6;;1558:7;;1567:8;;1528:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1373:210:::0;;;:::o;10625:190:23:-;1094:13:0;:11;:13::i;:::-;10703:45:23::1;::::0;-1:-1:-1;;;10703:45:23;;10742:4:::1;10703:45;::::0;::::1;1932:51:28::0;10685:15:23::1;::::0;10710:12:::1;-1:-1:-1::0;;;;;10703:30:23::1;::::0;::::1;::::0;1905:18:28;;10703:45:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10758:50;::::0;-1:-1:-1;;;10758:50:23;;10788:10:::1;10758:50;::::0;::::1;7773:51:28::0;7840:18;;;7833:34;;;10685:63:23;;-1:-1:-1;10765:12:23::1;-1:-1:-1::0;;;;;10758:29:23::1;::::0;::::1;::::0;7746:18:28;;10758:50:23::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5346:562::-:0;5510:7;5529:17;5549:43;5562:13;5577:14;5549:12;:43::i;:::-;5529:63;;5602:39;;;;;;;;;;;;;;-1:-1:-1;;;5602:39:23;;;5631:9;5602:11;:39::i;:::-;5651:19;5673:45;5688:13;5703:14;5673;:45::i;:::-;5651:67;;5728:43;;;;;;;;;;;;;;-1:-1:-1;;;5728:43:23;;;5759:11;5728;:43::i;:::-;5781:16;5813:62;5863:11;5813:32;:9;5840:4;5813:26;:32::i;:62::-;5781:94;5346:562;-1:-1:-1;;;;;;5346:562:23:o;1589:804:26:-;1795:10;1254:42;1795:28;1774:118;;;;-1:-1:-1;;;1774:118:26;;12357:2:28;1774:118:26;;;12339:21:28;12396:2;12376:18;;;12369:30;12435:34;12415:18;;;12408:62;-1:-1:-1;;;12486:18:28;;;12479:41;12537:19;;1774:118:26;12155:407:28;1774:118:26;1902:31;;;;;;;;;;;;;;-1:-1:-1;;;1902:31:26;;;:11;:31::i;:::-;1958:24;1996:25;2035:33;2092:8;2081:49;;;;;;;;;;;;:::i;:::-;1944:186;;;;;;2141:126;2171:17;2202:16;2232:25;2141:16;:126::i;:::-;2284:12;-1:-1:-1;;;;;2278:28:26;;1254:42;2362:10;2373:1;2362:13;;;;;;;;:::i;:::-;;;;;;;2348:7;2356:1;2348:10;;;;;;;;:::i;:::-;;;;;;;:28;;;;:::i;:::-;2278:108;;-1:-1:-1;;;;;;2278:108:26;;;;;;;-1:-1:-1;;;;;7791:32:28;;;2278:108:26;;;7773:51:28;7840:18;;;7833:34;7746:18;;2278:108:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1764:629;;;1589:804;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;13633:2:28;2154:73:0::1;::::0;::::1;13615:21:28::0;13672:2;13652:18;;;13645:30;13711:34;13691:18;;;13684:62;-1:-1:-1;;;13762:18:28;;;13755:36;13808:19;;2154:73:0::1;13431:402:28::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3465:96:5:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:5:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;6548:139:20:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:20;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:20;-1:-1:-1;;;6628:51:20;;;6612:15;:68::i;9533:268:23:-;9580:7;9603:1;9608;9603:6;9599:20;;-1:-1:-1;9618:1:23;;9533:268;-1:-1:-1;9533:268:23:o;9599:20::-;9629:9;9641:15;9654:1;9641:8;:1;9647;9641:5;:8::i;:15::-;9629:27;-1:-1:-1;9678:1:23;9689:88;9700:1;9696;:5;9689:88;;;-1:-1:-1;9721:1:23;9740:26;9764:1;9741:17;9721:1;9742:8;:1;9721;9742:5;:8::i;9740:26::-;9736:30;;9689:88;;3122:96:5;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;5630:121:20:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:20;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:20;-1:-1:-1;;;5701:42:20;;;5685:15;:59::i;8689:659:23:-;8753:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8753:33:23;8799:16;8817;8839:4;-1:-1:-1;;;;;8839:16:23;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8798:59;-1:-1:-1;;;;;8798:59:23;;;-1:-1:-1;;;;;8798:59:23;;;8867:35;;;;;;;;;;;;;;-1:-1:-1;;;8867:35:23;;;8896:4;8867:11;:35::i;:::-;8912:33;;;;;;;;;;;;;;-1:-1:-1;;;8912:33:23;;;8936:8;8912:11;:33::i;:::-;8955:34;;;;;;;;;;;;;;-1:-1:-1;;;8955:34:23;;;8980:8;8955:11;:34::i;:::-;9000:13;9024:15;9042:5;9024:23;;9078:12;-1:-1:-1;;;;;9061:29:23;:4;-1:-1:-1;;;;;9061:11:23;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9061:29:23;;9057:202;;9114:32;9137:8;9114:18;:8;9127:4;9114:12;:18::i;:32::-;9106:40;;9173:4;9160:17;;9057:202;;;9216:32;9239:8;9216:18;:8;9229:4;9216:12;:18::i;:32::-;9208:40;;9057:202;9276:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8689:659;-1:-1:-1;;8689:659:23:o;10094:385::-;10208:14;;10257:17;:8;10270:3;10257:12;:17::i;:::-;10234:40;-1:-1:-1;10284:14:23;10301:31;10234:40;10321:10;10301:19;:31::i;:::-;10284:48;-1:-1:-1;10342:16:23;10361:40;10385:15;10361:19;:9;10375:4;10361:13;:19::i;:40::-;10342:59;-1:-1:-1;10423:23:23;10342:59;10423:9;:23;:::i;:::-;10411:35;10094:385;-1:-1:-1;;;;;;;10094:385:23:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;15988:2:28;1414:68:0;;;15970:21:28;;;16007:18;;;16000:30;16066:34;16046:18;;;16039:62;16118:18;;1414:68:0;15786:356:28;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;181:376:20:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:20;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:20;-1:-1:-1;;;7077:54:20;;;7061:15;:71::i;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:28;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:28:o;426:118::-;512:5;505:13;498:21;491:5;488:32;478:60;;534:1;531;524:12;549:679;608:5;656:4;644:9;639:3;635:19;631:30;628:50;;;674:1;671;664:12;628:50;707:2;701:9;749:4;741:6;737:17;820:6;808:10;805:22;784:18;772:10;769:34;766:62;763:88;;;831:18;;:::i;:::-;871:10;867:2;860:22;;900:6;891:15;;943:9;930:23;922:6;915:39;1015:2;1004:9;1000:18;987:32;982:2;974:6;970:15;963:57;1081:2;1070:9;1066:18;1053:32;1048:2;1040:6;1036:15;1029:57;1138:2;1127:9;1123:18;1110:32;1151:30;1173:7;1151:30;:::i;:::-;1209:2;1197:15;;;;1190:32;549:679;;-1:-1:-1;;549:679:28:o;1233:366::-;1363:6;1371;1424:3;1412:9;1403:7;1399:23;1395:33;1392:53;;;1441:1;1438;1431:12;1392:53;1464:50;1506:7;1495:9;1464:50;:::i;:::-;1454:60;;1533;1585:7;1579:3;1568:9;1564:19;1533:60;:::i;:::-;1523:70;;1233:366;;;;;:::o;1994:131::-;-1:-1:-1;;;;;2069:31:28;;2059:42;;2049:70;;2115:1;2112;2105:12;2130:456;2207:6;2215;2223;2276:2;2264:9;2255:7;2251:23;2247:32;2244:52;;;2292:1;2289;2282:12;2244:52;2331:9;2318:23;2350:31;2375:5;2350:31;:::i;:::-;2400:5;-1:-1:-1;2457:2:28;2442:18;;2429:32;2470:33;2429:32;2470:33;:::i;:::-;2130:456;;2522:7;;-1:-1:-1;;;2576:2:28;2561:18;;;;2548:32;;2130:456::o;2591:530::-;2633:5;2686:3;2679:4;2671:6;2667:17;2663:27;2653:55;;2704:1;2701;2694:12;2653:55;2740:6;2727:20;2766:18;2762:2;2759:26;2756:52;;;2788:18;;:::i;:::-;2832:55;2875:2;2856:13;;-1:-1:-1;;2852:27:28;2881:4;2848:38;2832:55;:::i;:::-;2912:2;2903:7;2896:19;2958:3;2951:4;2946:2;2938:6;2934:15;2930:26;2927:35;2924:55;;;2975:1;2972;2965:12;2924:55;3040:2;3033:4;3025:6;3021:17;3014:4;3005:7;3001:18;2988:55;3088:1;3063:16;;;3081:4;3059:27;3052:38;;;;3067:7;2591:530;-1:-1:-1;;;2591:530:28:o;3126:531::-;3220:6;3228;3236;3289:2;3277:9;3268:7;3264:23;3260:32;3257:52;;;3305:1;3302;3295:12;3257:52;3344:9;3331:23;3363:31;3388:5;3363:31;:::i;:::-;3413:5;-1:-1:-1;3465:2:28;3450:18;;3437:32;;-1:-1:-1;3520:2:28;3505:18;;3492:32;3547:18;3536:30;;3533:50;;;3579:1;3576;3569:12;3533:50;3602:49;3643:7;3634:6;3623:9;3619:22;3602:49;:::i;:::-;3592:59;;;3126:531;;;;;:::o;3662:191::-;3730:4;3763:18;3755:6;3752:30;3749:56;;;3785:18;;:::i;:::-;-1:-1:-1;3830:1:28;3826:14;3842:4;3822:25;;3662:191::o;3858:753::-;3920:5;3973:3;3966:4;3958:6;3954:17;3950:27;3940:55;;3991:1;3988;3981:12;3940:55;4027:6;4014:20;4053:4;4077:68;4093:51;4141:2;4093:51;:::i;:::-;4077:68;:::i;:::-;4179:15;;;4265:1;4261:10;;;;4249:23;;4245:32;;;4210:12;;;;4289:15;;;4286:35;;;4317:1;4314;4307:12;4286:35;4353:2;4345:6;4341:15;4365:217;4381:6;4376:3;4373:15;4365:217;;;4461:3;4448:17;4478:31;4503:5;4478:31;:::i;:::-;4522:18;;4560:12;;;;4398;;4365:217;;;-1:-1:-1;4600:5:28;3858:753;-1:-1:-1;;;;;;3858:753:28:o;4616:670::-;4670:5;4723:3;4716:4;4708:6;4704:17;4700:27;4690:55;;4741:1;4738;4731:12;4690:55;4777:6;4764:20;4803:4;4827:68;4843:51;4891:2;4843:51;:::i;4827:68::-;4929:15;;;5015:1;5011:10;;;;4999:23;;4995:32;;;4960:12;;;;5039:15;;;5036:35;;;5067:1;5064;5057:12;5036:35;5103:2;5095:6;5091:15;5115:142;5131:6;5126:3;5123:15;5115:142;;;5197:17;;5185:30;;5235:12;;;;5148;;5115:142;;5291:815;5441:6;5449;5457;5510:2;5498:9;5489:7;5485:23;5481:32;5478:52;;;5526:1;5523;5516:12;5478:52;5566:9;5553:23;5595:18;5636:2;5628:6;5625:14;5622:34;;;5652:1;5649;5642:12;5622:34;5675:69;5736:7;5727:6;5716:9;5712:22;5675:69;:::i;:::-;5665:79;;5797:2;5786:9;5782:18;5769:32;5753:48;;5826:2;5816:8;5813:16;5810:36;;;5842:1;5839;5832:12;5810:36;5865:63;5920:7;5909:8;5898:9;5894:24;5865:63;:::i;:::-;5855:73;;5981:2;5970:9;5966:18;5953:32;5937:48;;6010:2;6000:8;5997:16;5994:36;;;6026:1;6023;6016:12;5994:36;;6049:51;6092:7;6081:8;6070:9;6066:24;6049:51;:::i;6111:1042::-;6295:6;6303;6311;6319;6372:3;6360:9;6351:7;6347:23;6343:33;6340:53;;;6389:1;6386;6379:12;6340:53;6429:9;6416:23;6458:18;6499:2;6491:6;6488:14;6485:34;;;6515:1;6512;6505:12;6485:34;6538:69;6599:7;6590:6;6579:9;6575:22;6538:69;:::i;:::-;6528:79;;6660:2;6649:9;6645:18;6632:32;6616:48;;6689:2;6679:8;6676:16;6673:36;;;6705:1;6702;6695:12;6673:36;6728:63;6783:7;6772:8;6761:9;6757:24;6728:63;:::i;:::-;6718:73;;6844:2;6833:9;6829:18;6816:32;6800:48;;6873:2;6863:8;6860:16;6857:36;;;6889:1;6886;6879:12;6857:36;6912:63;6967:7;6956:8;6945:9;6941:24;6912:63;:::i;:::-;6902:73;;7028:2;7017:9;7013:18;7000:32;6984:48;;7057:2;7047:8;7044:16;7041:36;;;7073:1;7070;7063:12;7041:36;;7096:51;7139:7;7128:8;7117:9;7113:24;7096:51;:::i;:::-;7086:61;;;6111:1042;;;;;;;:::o;7158:247::-;7217:6;7270:2;7258:9;7249:7;7245:23;7241:32;7238:52;;;7286:1;7283;7276:12;7238:52;7325:9;7312:23;7344:31;7369:5;7344:31;:::i;7410:184::-;7480:6;7533:2;7521:9;7512:7;7508:23;7504:32;7501:52;;;7549:1;7546;7539:12;7501:52;-1:-1:-1;7572:16:28;;7410:184;-1:-1:-1;7410:184:28:o;7878:245::-;7945:6;7998:2;7986:9;7977:7;7973:23;7969:32;7966:52;;;8014:1;8011;8004:12;7966:52;8046:9;8040:16;8065:28;8087:5;8065:28;:::i;8128:533::-;8403:25;;;8459:2;8444:18;;8437:34;;;;-1:-1:-1;;;;;8507:32:28;8502:2;8487:18;;8480:60;8576:3;8571:2;8556:18;;8549:31;;;-1:-1:-1;8596:19:28;;;8589:30;8527:3;8636:19;;8128:533::o;9549:258::-;9621:1;9631:113;9645:6;9642:1;9639:13;9631:113;;;9721:11;;;9715:18;9702:11;;;9695:39;9667:2;9660:10;9631:113;;;9762:6;9759:1;9756:13;9753:48;;;-1:-1:-1;;9797:1:28;9779:16;;9772:27;9549:258::o;9812:274::-;9941:3;9979:6;9973:13;9995:53;10041:6;10036:3;10029:4;10021:6;10017:17;9995:53;:::i;:::-;10064:16;;;;;9812:274;-1:-1:-1;;9812:274:28:o;10440:257::-;10481:3;10519:5;10513:12;10546:6;10541:3;10534:19;10562:63;10618:6;10611:4;10606:3;10602:14;10595:4;10588:5;10584:16;10562:63;:::i;:::-;10679:2;10658:15;-1:-1:-1;;10654:29:28;10645:39;;;;10686:4;10641:50;;10440:257;-1:-1:-1;;10440:257:28:o;10702:1448::-;-1:-1:-1;;;;;11151:15:28;;;11133:34;;11082:3;11186:2;11204:18;;;11197:31;;;11277:13;;11067:19;;;11299:22;;;11034:4;;11379:15;;;;11105:19;;11186:2;11113:3;11337:19;;;11034:4;11422:178;11436:6;11433:1;11430:13;11422:178;;;11501:13;;11497:22;;11485:35;;11575:15;;;;11540:12;;;;11458:1;11451:9;11422:178;;;-1:-1:-1;;11636:19:28;;;11631:2;11616:18;;11609:47;11706:13;;11728:21;;;11767:12;;;;-1:-1:-1;11706:13:28;-1:-1:-1;11804:15:28;;;11839:1;11849:189;11865:8;11860:3;11857:17;11849:189;;;11934:15;;11920:30;;11972:14;;;;12011:17;;;;11893:1;11884:11;11849:189;;;11853:3;;;;12085:9;12078:5;12074:21;12069:2;12058:9;12054:18;12047:49;12113:31;12138:5;12130:6;12113:31;:::i;12567:462::-;12671:6;12679;12687;12740:2;12728:9;12719:7;12715:23;12711:32;12708:52;;;12756:1;12753;12746:12;12708:52;12788:9;12782:16;12807:31;12832:5;12807:31;:::i;:::-;12907:2;12892:18;;12886:25;12857:5;;-1:-1:-1;12920:33:28;12886:25;12920:33;:::i;:::-;12972:7;12962:17;;;13019:2;13008:9;13004:18;12998:25;12988:35;;12567:462;;;;;:::o;13034:127::-;13095:10;13090:3;13086:20;13083:1;13076:31;13126:4;13123:1;13116:15;13150:4;13147:1;13140:15;13166:127;13227:10;13222:3;13218:20;13215:1;13208:31;13258:4;13255:1;13248:15;13282:4;13279:1;13272:15;13298:128;13338:3;13369:1;13365:6;13362:1;13359:13;13356:39;;;13375:18;;:::i;:::-;-1:-1:-1;13411:9:28;;13298:128::o;13838:168::-;13878:7;13944:1;13940;13936:6;13932:14;13929:1;13926:21;13921:1;13914:9;13907:17;13903:45;13900:71;;;13951:18;;:::i;:::-;-1:-1:-1;13991:9:28;;13838:168::o;14011:217::-;14051:1;14077;14067:132;;14121:10;14116:3;14112:20;14109:1;14102:31;14156:4;14153:1;14146:15;14184:4;14181:1;14174:15;14067:132;-1:-1:-1;14213:9:28;;14011:217::o;14233:290::-;14410:2;14399:9;14392:21;14373:4;14430:44;14470:2;14459:9;14455:18;14447:6;14430:44;:::i;:::-;14422:52;;14510:6;14505:2;14494:9;14490:18;14483:34;14233:290;;;;;:::o;14528:125::-;14568:4;14596:1;14593;14590:8;14587:34;;;14601:18;;:::i;:::-;-1:-1:-1;14638:9:28;;14528:125::o;14658:219::-;14807:2;14796:9;14789:21;14770:4;14827:44;14867:2;14856:9;14852:18;14844:6;14827:44;:::i;14882:188::-;14961:13;;-1:-1:-1;;;;;15003:42:28;;14993:53;;14983:81;;15060:1;15057;15050:12;14983:81;14882:188;;;:::o;15075:450::-;15162:6;15170;15178;15231:2;15219:9;15210:7;15206:23;15202:32;15199:52;;;15247:1;15244;15237:12;15199:52;15270:40;15300:9;15270:40;:::i;:::-;15260:50;;15329:49;15374:2;15363:9;15359:18;15329:49;:::i;:::-;15319:59;;15421:2;15410:9;15406:18;15400:25;15465:10;15458:5;15454:22;15447:5;15444:33;15434:61;;15491:1;15488;15481:12;15434:61;15514:5;15504:15;;;15075:450;;;;;:::o;15530:251::-;15600:6;15653:2;15641:9;15632:7;15628:23;15624:32;15621:52;;;15669:1;15666;15659:12;15621:52;15701:9;15695:16;15720:31;15745:5;15720:31;:::i;16147:316::-;16324:2;16313:9;16306:21;16287:4;16344:44;16384:2;16373:9;16369:18;16361:6;16344:44;:::i;:::-;16336:52;;16453:1;16449;16444:3;16440:11;16436:19;16428:6;16424:32;16419:2;16408:9;16404:18;16397:60;16147:316;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "31767": [
=======
    "object": "0x60a06040526103e56001553480156200001757600080fd5b50604051620021bf380380620021bf8339810160408190526200003a91620000a9565b80620000463362000059565b6001600160a01b031660805250620000db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000bc57600080fd5b81516001600160a01b0381168114620000d457600080fd5b9392505050565b6080516120906200012f600039600081816101160152818161048e015281816106d901528181610c5401528181610df601528181611036015281816110c8015281816112aa015261165801526120906000f3fe6080604052600436106100c55760003560e01c806377432b8c1161007f578063ea3e506c11610059578063ea3e506c1461021a578063eb6b21161461022f578063f04f27071461024f578063f2fde38b1461026f57600080fd5b806377432b8c146101c75780638da5cb5b146101dc578063c9a69562146101fa57600080fd5b8062bb7d67146100d1578063040141e5146101045780631fa7d39b14610150578063650f84be146101705780636dbf2fa014610192578063715018a6146101b257600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f16100ec36600461196d565b61028f565b6040519081526020015b60405180910390f35b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fb565b34801561015c57600080fd5b506100f161016b36600461196d565b6103e2565b34801561017c57600080fd5b5061019061018b3660046119b8565b610476565b005b34801561019e57600080fd5b506101906101ad366004611a69565b610e98565b3480156101be57600080fd5b50610190610f4b565b3480156101d357600080fd5b50610190610f5f565b3480156101e857600080fd5b506000546001600160a01b0316610138565b34801561020657600080fd5b50610190610215366004611bb5565b610f9a565b34801561022657600080fd5b50610190611016565b34801561023b57600080fd5b506100f161024a36600461196d565b61113d565b34801561025b57600080fd5b5061019061026a366004611c33565b6111d6565b34801561027b57600080fd5b5061019061028a366004611ce0565b6113a5565b606082015160009015156001036103805760006102e584600001516102df85602001516102df87600001516102d98a602001516102d960015460015461141e90919063ffffffff16565b9061141e565b90611431565b90506103146040518060400160405280600b81526020016a707265737172743a20257360a81b8152508261143d565b61034f60405180604001604052806011815260200170737172742870726573717274293a20257360781b81525061034a83611482565b61143d565b600061037685600001516102d986602001516102d96103e861037088611482565b906114ce565b92506103dc915050565b60006103b984602001516102df85600001516102df87602001516102d98a600001516102d960015460015461141e90919063ffffffff16565b9050600061037685602001516102d986600001516102d96103e861037088611482565b92915050565b6060820151600090151560010361044557600061043c61041785602001516102d960015460015461141e90919063ffffffff16565b6104366103e86102d9876020015160015461141e90919063ffffffff16565b906114da565b91506103dc9050565b825160015460009161043c9161046091906102d9908061141e565b8451600154610436916103e8916102d99161141e565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611cfd565b905061053b604051806040016040528060168152602001755374617274696e672062616c616e636520203a20257360501b8152508261143d565b60408051808201909152601e81527f0a2d2d2d2d2d2d2d2d2d20504149522044415441202d2d2d2d2d2d2d2d2d000060208201528490849061057c906114e6565b600061058783611529565b9050600061059483611529565b90506105d46040518060400160405280601b81526020017f0a2d2d2d2d2d2d2d2d2d20505249434553202d2d2d2d2d2d2d2d2d00000000008152506114e6565b610610604051806040016040528060168152602001756669727374506169722070726963652020203a20257360501b815250836040015161143d565b61064c604051806040016040528060168152602001757365636f6e645061697220707269636520203a20257360501b815250826040015161143d565b6000610658838361113d565b905061067b604051806060016040528060228152602001612039602291396114e6565b6106b360405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b8152508261143d565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611d16565b506000808460600151151560011515036109a15761076d8386600001518760200151611750565b91506107828285602001518660000151611750565b90506107bc60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b8152508361143d565b6107f46040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b8152508261143d565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b602082015261082f9061034a83866114ce565b61086d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d000000008152506114e6565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f9061089e9060009086908f90600401611d33565b600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b5050505061090460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b8152506114e6565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f906109359084906000903090600401611d33565b600060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b5050505061099c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b8152506114e6565b610c3c565b6109b48386602001518760000151611750565b91506109c98285600001518660200151611750565b90506109ec604051806060016040528060228152602001612039602291396114e6565b610a2460405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b8152508461143d565b610a5c60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b8152508361143d565b610a946040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b8152508261143d565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b6020820152610acf9061034a83866114ce565b610b0d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d000000008152506114e6565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f90610b3e9085906000908f90600401611d33565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050610ba460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b8152506114e6565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f90610bd59060009085903090600401611d33565b600060405180830381600087803b158015610bef57600080fd5b505af1158015610c03573d6000803e3d6000fd5b50505050610c3c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b8152506114e6565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611cfd565b9050888111610d105760405162461bcd60e51b815260206004820152601060248201526f105c989a5d1c9859d94819985a5b195960821b60448201526064015b60405180910390fd5b610d4e6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2053554343455353202d2d2d2d2d2d2d2d2d000000008152506114e6565b610d8660405180604001604052806016815260200175456e64696e672062616c616e6365202020203a20257360501b8152508261143d565b6000610d92828b6114ce565b9050610dcc6040518060400160405280601681526020017550726f6669742020202020202020202020203a20257360501b8152508261143d565b6000610ddd60646102df848f61141e565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505060405141925083156108fc02915083906000818181858888f19350505050158015610e87573d6000803e3d6000fd5b505050505050505050505050505050565b610ea0611798565b6000836001600160a01b03168383604051610ebb9190611d8d565b60006040518083038185875af1925050503d8060008114610ef8576040519150601f19603f3d011682016040523d82523d6000602084013e610efd565b606091505b5050905080610f455760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b6044820152606401610d07565b50505050565b610f53611798565b610f5d60006117f2565b565b610f67611798565b6040514790339082156108fc029083906000818181858888f19350505050158015610f96573d6000803e3d6000fd5b5050565b610fa2611798565b604051632e1c224f60e11b815273ba12222222228d8ba445958a75a0704d566bf2c890635c38449e90610fdf903090879087908790600401611dd5565b600060405180830381600087803b158015610ff957600080fd5b505af115801561100d573d6000803e3d6000fd5b50505050505050565b61101e611798565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611085573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a99190611cfd565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611119573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f969190611d16565b60008061114a848461028f565b905061117b6040518060400160405280600d81526020016c6e756d657261746f723a20257360981b8152508261143d565b600061118785856103e2565b90506111ba6040518060400160405280600f81526020016e64656e6f6d696e61746f723a20257360881b8152508261143d565b60006111cc826102df856103e861141e565b9695505050505050565b3373ba12222222228d8ba445958a75a0704d566bf2c81461124d5760405162461bcd60e51b815260206004820152602b60248201527f466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f60448201526a1d081d1a19481d985d5b1d60aa1b6064820152608401610d07565b61127e6040518060400160405280601081526020016f3932b1b2b4bb32a33630b9b42637b0b760811b8152506114e6565b6000806000838060200190518101906112979190611e71565b9250925092506112a8828483610476565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876000815181106112ff576112ff611eb4565b60200260200101518960008151811061131a5761131a611eb4565b602002602001015161132c9190611ee0565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139b9190611d16565b5050505050505050565b6113ad611798565b6001600160a01b0381166114125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d07565b61141b816117f2565b50565b600061142a8284611ef8565b9392505050565b600061142a8284611f17565b610f968282604051602401611453929190611f39565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b179052611842565b60008160000361149457506000919050565b60006114a660026102df8560016114da565b9050825b8082101561142a5750806114c760026102df836104368882611431565b91506114aa565b600061142a8284611f5b565b600061142a8284611ee0565b61141b816040516024016114fa9190611f72565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052611842565b61155660405180608001604052806000815260200160008152602001600081526020016000151581525090565b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bb9190611fa1565b506001600160701b031691506001600160701b031691506115f9604051806040016040528060058152602001643830b4b91d60d91b81525085611863565b611624604051806040016040528060098152602001683932b9b2b93b32981d60b91b8152508361143d565b61164f604051806040016040528060098152602001683932b9b2b93b32989d60b91b8152508261143d565b600080600090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e29190611ff1565b6001600160a01b03160361171157611706846102df85670de0b6b3a764000061141e565b91506001905061172a565b611727836102df86670de0b6b3a764000061141e565b91505b604080516080810182529485526020850193909352918301521515606082015292915050565b60008061175f856103e561141e565b9050600061176d828561141e565b9050600061178183610436886103e861141e565b905061178d8183611f17565b979650505050505050565b6000546001600160a01b03163314610f5d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610f96828260405160240161187992919061200e565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b179052611842565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118e7576118e76118a8565b604052919050565b801515811461141b57600080fd5b60006080828403121561190f57600080fd5b6040516080810181811067ffffffffffffffff82111715611932576119326118a8565b80604052508091508235815260208301356020820152604083013560408201526060830135611960816118ef565b6060919091015292915050565b600080610100838503121561198157600080fd5b61198b84846118fd565b915061199a84608085016118fd565b90509250929050565b6001600160a01b038116811461141b57600080fd5b6000806000606084860312156119cd57600080fd5b83356119d8816119a3565b925060208401356119e8816119a3565b929592945050506040919091013590565b600082601f830112611a0a57600080fd5b813567ffffffffffffffff811115611a2457611a246118a8565b611a37601f8201601f19166020016118be565b818152846020838601011115611a4c57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611a7e57600080fd5b8335611a89816119a3565b925060208401359150604084013567ffffffffffffffff811115611aac57600080fd5b611ab8868287016119f9565b9150509250925092565b600067ffffffffffffffff821115611adc57611adc6118a8565b5060051b60200190565b600082601f830112611af757600080fd5b81356020611b0c611b0783611ac2565b6118be565b82815260059290921b84018101918181019086841115611b2b57600080fd5b8286015b84811015611b4f578035611b42816119a3565b8352918301918301611b2f565b509695505050505050565b600082601f830112611b6b57600080fd5b81356020611b7b611b0783611ac2565b82815260059290921b84018101918181019086841115611b9a57600080fd5b8286015b84811015611b4f5780358352918301918301611b9e565b600080600060608486031215611bca57600080fd5b833567ffffffffffffffff80821115611be257600080fd5b611bee87838801611ae6565b94506020860135915080821115611c0457600080fd5b611c1087838801611b5a565b93506040860135915080821115611c2657600080fd5b50611ab8868287016119f9565b60008060008060808587031215611c4957600080fd5b843567ffffffffffffffff80821115611c6157600080fd5b611c6d88838901611ae6565b95506020870135915080821115611c8357600080fd5b611c8f88838901611b5a565b94506040870135915080821115611ca557600080fd5b611cb188838901611b5a565b93506060870135915080821115611cc757600080fd5b50611cd4878288016119f9565b91505092959194509250565b600060208284031215611cf257600080fd5b813561142a816119a3565b600060208284031215611d0f57600080fd5b5051919050565b600060208284031215611d2857600080fd5b815161142a816118ef565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b60005b83811015611d7c578181015183820152602001611d64565b83811115610f455750506000910152565b60008251611d9f818460208701611d61565b9190910192915050565b60008151808452611dc1816020860160208601611d61565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611e23578551851683529483019491830191600101611e05565b5050858103604087015287518082529082019350915080870160005b83811015611e5b57815185529382019390820190600101611e3f565b50505050828103606084015261178d8185611da9565b600080600060608486031215611e8657600080fd5b8351611e91816119a3565b6020850151909350611ea2816119a3565b80925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611ef357611ef3611eca565b500190565b6000816000190483118215151615611f1257611f12611eca565b500290565b600082611f3457634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611f4c6040830185611da9565b90508260208301529392505050565b600082821015611f6d57611f6d611eca565b500390565b60208152600061142a6020830184611da9565b80516001600160701b0381168114611f9c57600080fd5b919050565b600080600060608486031215611fb657600080fd5b611fbf84611f85565b9250611fcd60208501611f85565b9150604084015163ffffffff81168114611fe657600080fd5b809150509250925092565b60006020828403121561200357600080fd5b815161142a816119a3565b6040815260006120216040830185611da9565b905060018060a01b0383166020830152939250505056fe0a2d2d2d2d2d2d2d2d2d20545241444520414d4f554e5453202d2d2d2d2d2d2d2d2da2646970667358221220f3339f161865b196641314ca806ddadd4aa0d714cd7ad35da496e28f3a660b1164736f6c634300080f0033",
    "sourceMap": "1140:1244:26:-:0;;;908:3:23;885:26;;1296:63:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1343:12;936:32:0;719:10:4;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1010:27:23;;;-1:-1:-1;1140:1244:26;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:28:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;1140:1244:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
=======
    "object": "0x60a06040526103e56001553480156200001757600080fd5b5060405162002268380380620022688339810160408190526200003a91620000a9565b80620000463362000059565b6001600160a01b031660805250620000db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000bc57600080fd5b81516001600160a01b0381168114620000d457600080fd5b9392505050565b60805161213262000136600039600081816101160152818161048e015281816106d901528181610c5401528181610df601528181610eb3015281816110d80152818161116a0152818161134c01526116fa01526121326000f3fe6080604052600436106100c55760003560e01c806377432b8c1161007f578063ea3e506c11610059578063ea3e506c1461021a578063eb6b21161461022f578063f04f27071461024f578063f2fde38b1461026f57600080fd5b806377432b8c146101c75780638da5cb5b146101dc578063c9a69562146101fa57600080fd5b8062bb7d67146100d1578063040141e5146101045780631fa7d39b14610150578063650f84be146101705780636dbf2fa014610192578063715018a6146101b257600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f16100ec366004611a0f565b61028f565b6040519081526020015b60405180910390f35b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fb565b34801561015c57600080fd5b506100f161016b366004611a0f565b6103e2565b34801561017c57600080fd5b5061019061018b366004611a5a565b610476565b005b34801561019e57600080fd5b506101906101ad366004611b0b565b610f3a565b3480156101be57600080fd5b50610190610fed565b3480156101d357600080fd5b50610190611001565b3480156101e857600080fd5b506000546001600160a01b0316610138565b34801561020657600080fd5b50610190610215366004611c57565b61103c565b34801561022657600080fd5b506101906110b8565b34801561023b57600080fd5b506100f161024a366004611a0f565b6111df565b34801561025b57600080fd5b5061019061026a366004611cd5565b611278565b34801561027b57600080fd5b5061019061028a366004611d82565b611447565b606082015160009015156001036103805760006102e584600001516102df85602001516102df87600001516102d98a602001516102d96001546001546114c090919063ffffffff16565b906114c0565b906114d3565b90506103146040518060400160405280600b81526020016a707265737172743a20257360a81b815250826114df565b61034f60405180604001604052806011815260200170737172742870726573717274293a20257360781b81525061034a83611524565b6114df565b600061037685600001516102d986602001516102d96103e861037088611524565b90611570565b92506103dc915050565b60006103b984602001516102df85600001516102df87602001516102d98a600001516102d96001546001546114c090919063ffffffff16565b9050600061037685602001516102d986600001516102d96103e861037088611524565b92915050565b6060820151600090151560010361044557600061043c61041785602001516102d96001546001546114c090919063ffffffff16565b6104366103e86102d987602001516001546114c090919063ffffffff16565b9061157c565b91506103dc9050565b825160015460009161043c9161046091906102d990806114c0565b8451600154610436916103e8916102d9916114c0565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611d9f565b905061053b604051806040016040528060168152602001755374617274696e672062616c616e636520203a20257360501b815250826114df565b60408051808201909152601e81527f0a2d2d2d2d2d2d2d2d2d20504149522044415441202d2d2d2d2d2d2d2d2d000060208201528490849061057c90611588565b6000610587836115cb565b90506000610594836115cb565b90506105d46040518060400160405280601b81526020017f0a2d2d2d2d2d2d2d2d2d20505249434553202d2d2d2d2d2d2d2d2d0000000000815250611588565b610610604051806040016040528060168152602001756669727374506169722070726963652020203a20257360501b81525083604001516114df565b61064c604051806040016040528060168152602001757365636f6e645061697220707269636520203a20257360501b81525082604001516114df565b600061065883836111df565b905061067b6040518060600160405280602281526020016120db60229139611588565b6106b360405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250826114df565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611db8565b506000808460600151151560011515036109a15761076d83866000015187602001516117f2565b915061078282856020015186600001516117f2565b90506107bc60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b6107f46040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b602082015261082f9061034a8386611570565b61086d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f9061089e9060009086908f90600401611dd5565b600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b5050505061090460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f906109359084906000903090600401611dd5565b600060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b5050505061099c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b610c3c565b6109b483866020015187600001516117f2565b91506109c982856000015186602001516117f2565b90506109ec6040518060600160405280602281526020016120db60229139611588565b610a2460405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250846114df565b610a5c60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b610a946040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b6020820152610acf9061034a8386611570565b610b0d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f90610b3e9085906000908f90600401611dd5565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050610ba460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f90610bd59060009085903090600401611dd5565b600060405180830381600087803b158015610bef57600080fd5b505af1158015610c03573d6000803e3d6000fd5b50505050610c3c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611d9f565b9050888111610d105760405162461bcd60e51b815260206004820152601060248201526f105c989a5d1c9859d94819985a5b195960821b60448201526064015b60405180910390fd5b610d4e6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2053554343455353202d2d2d2d2d2d2d2d2d00000000815250611588565b610d8660405180604001604052806016815260200175456e64696e672062616c616e6365202020203a20257360501b815250826114df565b6000610d92828b611570565b9050610dcc6040518060400160405280601681526020017550726f6669742020202020202020202020203a20257360501b815250826114df565b6000610ddd60646102df848f6114c0565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505060405141925083156108fc02915083906000818181858888f19350505050158015610e87573d6000803e3d6000fd5b506000610e948383611570565b60405163a9059cbb60e01b8152326004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611db8565b50505050505050505050505050505050565b610f4261183a565b6000836001600160a01b03168383604051610f5d9190611e2f565b60006040518083038185875af1925050503d8060008114610f9a576040519150601f19603f3d011682016040523d82523d6000602084013e610f9f565b606091505b5050905080610fe75760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b6044820152606401610d07565b50505050565b610ff561183a565b610fff6000611894565b565b61100961183a565b6040514790339082156108fc029083906000818181858888f19350505050158015611038573d6000803e3d6000fd5b5050565b61104461183a565b604051632e1c224f60e11b815273ba12222222228d8ba445958a75a0704d566bf2c890635c38449e90611081903090879087908790600401611e77565b600060405180830381600087803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b50505050505050565b6110c061183a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190611d9f565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611db8565b6000806111ec848461028f565b905061121d6040518060400160405280600d81526020016c6e756d657261746f723a20257360981b815250826114df565b600061122985856103e2565b905061125c6040518060400160405280600f81526020016e64656e6f6d696e61746f723a20257360881b815250826114df565b600061126e826102df856103e86114c0565b9695505050505050565b3373ba12222222228d8ba445958a75a0704d566bf2c8146112ef5760405162461bcd60e51b815260206004820152602b60248201527f466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f60448201526a1d081d1a19481d985d5b1d60aa1b6064820152608401610d07565b6113206040518060400160405280601081526020016f3932b1b2b4bb32a33630b9b42637b0b760811b815250611588565b6000806000838060200190518101906113399190611f13565b92509250925061134a828483610476565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876000815181106113a1576113a1611f56565b6020026020010151896000815181106113bc576113bc611f56565b60200260200101516113ce9190611f82565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190611db8565b5050505050505050565b61144f61183a565b6001600160a01b0381166114b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d07565b6114bd81611894565b50565b60006114cc8284611f9a565b9392505050565b60006114cc8284611fb9565b61103882826040516024016114f5929190611fdb565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526118e4565b60008160000361153657506000919050565b600061154860026102df85600161157c565b9050825b808210156114cc57508061156960026102df8361043688826114d3565b915061154c565b60006114cc8284611ffd565b60006114cc8284611f82565b6114bd8160405160240161159c9190612014565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118e4565b6115f860405180608001604052806000815260200160008152602001600081526020016000151581525090565b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612043565b506001600160701b031691506001600160701b0316915061169b604051806040016040528060058152602001643830b4b91d60d91b81525085611905565b6116c6604051806040016040528060098152602001683932b9b2b93b32981d60b91b815250836114df565b6116f1604051806040016040528060098152602001683932b9b2b93b32989d60b91b815250826114df565b600080600090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117849190612093565b6001600160a01b0316036117b3576117a8846102df85670de0b6b3a76400006114c0565b9150600190506117cc565b6117c9836102df86670de0b6b3a76400006114c0565b91505b604080516080810182529485526020850193909352918301521515606082015292915050565b600080611801856103e56114c0565b9050600061180f82856114c0565b9050600061182383610436886103e86114c0565b905061182f8183611fb9565b979650505050505050565b6000546001600160a01b03163314610fff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b611038828260405160240161191b9291906120b0565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526118e4565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119895761198961194a565b604052919050565b80151581146114bd57600080fd5b6000608082840312156119b157600080fd5b6040516080810181811067ffffffffffffffff821117156119d4576119d461194a565b80604052508091508235815260208301356020820152604083013560408201526060830135611a0281611991565b6060919091015292915050565b6000806101008385031215611a2357600080fd5b611a2d848461199f565b9150611a3c846080850161199f565b90509250929050565b6001600160a01b03811681146114bd57600080fd5b600080600060608486031215611a6f57600080fd5b8335611a7a81611a45565b92506020840135611a8a81611a45565b929592945050506040919091013590565b600082601f830112611aac57600080fd5b813567ffffffffffffffff811115611ac657611ac661194a565b611ad9601f8201601f1916602001611960565b818152846020838601011115611aee57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611b2057600080fd5b8335611b2b81611a45565b925060208401359150604084013567ffffffffffffffff811115611b4e57600080fd5b611b5a86828701611a9b565b9150509250925092565b600067ffffffffffffffff821115611b7e57611b7e61194a565b5060051b60200190565b600082601f830112611b9957600080fd5b81356020611bae611ba983611b64565b611960565b82815260059290921b84018101918181019086841115611bcd57600080fd5b8286015b84811015611bf1578035611be481611a45565b8352918301918301611bd1565b509695505050505050565b600082601f830112611c0d57600080fd5b81356020611c1d611ba983611b64565b82815260059290921b84018101918181019086841115611c3c57600080fd5b8286015b84811015611bf15780358352918301918301611c40565b600080600060608486031215611c6c57600080fd5b833567ffffffffffffffff80821115611c8457600080fd5b611c9087838801611b88565b94506020860135915080821115611ca657600080fd5b611cb287838801611bfc565b93506040860135915080821115611cc857600080fd5b50611b5a86828701611a9b565b60008060008060808587031215611ceb57600080fd5b843567ffffffffffffffff80821115611d0357600080fd5b611d0f88838901611b88565b95506020870135915080821115611d2557600080fd5b611d3188838901611bfc565b94506040870135915080821115611d4757600080fd5b611d5388838901611bfc565b93506060870135915080821115611d6957600080fd5b50611d7687828801611a9b565b91505092959194509250565b600060208284031215611d9457600080fd5b81356114cc81611a45565b600060208284031215611db157600080fd5b5051919050565b600060208284031215611dca57600080fd5b81516114cc81611991565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b60005b83811015611e1e578181015183820152602001611e06565b83811115610fe75750506000910152565b60008251611e41818460208701611e03565b9190910192915050565b60008151808452611e63816020860160208601611e03565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611ec5578551851683529483019491830191600101611ea7565b5050858103604087015287518082529082019350915080870160005b83811015611efd57815185529382019390820190600101611ee1565b50505050828103606084015261182f8185611e4b565b600080600060608486031215611f2857600080fd5b8351611f3381611a45565b6020850151909350611f4481611a45565b80925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611f9557611f95611f6c565b500190565b6000816000190483118215151615611fb457611fb4611f6c565b500290565b600082611fd657634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611fee6040830185611e4b565b90508260208301529392505050565b60008282101561200f5761200f611f6c565b500390565b6020815260006114cc6020830184611e4b565b80516001600160701b038116811461203e57600080fd5b919050565b60008060006060848603121561205857600080fd5b61206184612027565b925061206f60208501612027565b9150604084015163ffffffff8116811461208857600080fd5b809150509250925092565b6000602082840312156120a557600080fd5b81516114cc81611a45565b6040815260006120c36040830185611e4b565b905060018060a01b0383166020830152939250505056fe0a2d2d2d2d2d2d2d2d2d20545241444520414d4f554e5453202d2d2d2d2d2d2d2d2da26469706673582212203a5020697b87f538eac82eeeb24dab257ed00103d26852aae431eb9ab706d9d864736f6c634300080f0033",
    "sourceMap": "1140:1255:26:-:0;;;908:3:23;885:26;;1304:63:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1351:12;936:32:0;719:10:4;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1010:27:23;;;-1:-1:-1;1140:1255:26;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:290:28:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:28;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:28:o;:::-;1140:1255:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100c55760003560e01c806377432b8c1161007f578063ea3e506c11610059578063ea3e506c1461021a578063eb6b21161461022f578063f04f27071461024f578063f2fde38b1461026f57600080fd5b806377432b8c146101c75780638da5cb5b146101dc578063c9a69562146101fa57600080fd5b8062bb7d67146100d1578063040141e5146101045780631fa7d39b14610150578063650f84be146101705780636dbf2fa014610192578063715018a6146101b257600080fd5b366100cc57005b600080fd5b3480156100dd57600080fd5b506100f16100ec366004611a0f565b61028f565b6040519081526020015b60405180910390f35b34801561011057600080fd5b506101387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fb565b34801561015c57600080fd5b506100f161016b366004611a0f565b6103e2565b34801561017c57600080fd5b5061019061018b366004611a5a565b610476565b005b34801561019e57600080fd5b506101906101ad366004611b0b565b610f3a565b3480156101be57600080fd5b50610190610fed565b3480156101d357600080fd5b50610190611001565b3480156101e857600080fd5b506000546001600160a01b0316610138565b34801561020657600080fd5b50610190610215366004611c57565b61103c565b34801561022657600080fd5b506101906110b8565b34801561023b57600080fd5b506100f161024a366004611a0f565b6111df565b34801561025b57600080fd5b5061019061026a366004611cd5565b611278565b34801561027b57600080fd5b5061019061028a366004611d82565b611447565b606082015160009015156001036103805760006102e584600001516102df85602001516102df87600001516102d98a602001516102d96001546001546114c090919063ffffffff16565b906114c0565b906114d3565b90506103146040518060400160405280600b81526020016a707265737172743a20257360a81b815250826114df565b61034f60405180604001604052806011815260200170737172742870726573717274293a20257360781b81525061034a83611524565b6114df565b600061037685600001516102d986602001516102d96103e861037088611524565b90611570565b92506103dc915050565b60006103b984602001516102df85600001516102df87602001516102d98a600001516102d96001546001546114c090919063ffffffff16565b9050600061037685602001516102d986600001516102d96103e861037088611524565b92915050565b6060820151600090151560010361044557600061043c61041785602001516102d96001546001546114c090919063ffffffff16565b6104366103e86102d987602001516001546114c090919063ffffffff16565b9061157c565b91506103dc9050565b825160015460009161043c9161046091906102d990806114c0565b8451600154610436916103e8916102d9916114c0565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611d9f565b905061053b604051806040016040528060168152602001755374617274696e672062616c616e636520203a20257360501b815250826114df565b60408051808201909152601e81527f0a2d2d2d2d2d2d2d2d2d20504149522044415441202d2d2d2d2d2d2d2d2d000060208201528490849061057c90611588565b6000610587836115cb565b90506000610594836115cb565b90506105d46040518060400160405280601b81526020017f0a2d2d2d2d2d2d2d2d2d20505249434553202d2d2d2d2d2d2d2d2d0000000000815250611588565b610610604051806040016040528060168152602001756669727374506169722070726963652020203a20257360501b81525083604001516114df565b61064c604051806040016040528060168152602001757365636f6e645061697220707269636520203a20257360501b81525082604001516114df565b600061065883836111df565b905061067b6040518060600160405280602281526020016120db60229139611588565b6106b360405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250826114df565b60405163a9059cbb60e01b81526001600160a01b038a81166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610722573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107469190611db8565b506000808460600151151560011515036109a15761076d83866000015187602001516117f2565b915061078282856020015186600001516117f2565b90506107bc60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b6107f46040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b602082015261082f9061034a8386611570565b61086d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f9061089e9060009086908f90600401611dd5565b600060405180830381600087803b1580156108b857600080fd5b505af11580156108cc573d6000803e3d6000fd5b5050505061090460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f906109359084906000903090600401611dd5565b600060405180830381600087803b15801561094f57600080fd5b505af1158015610963573d6000803e3d6000fd5b5050505061099c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b610c3c565b6109b483866020015187600001516117f2565b91506109c982856000015186602001516117f2565b90506109ec6040518060600160405280602281526020016120db60229139611588565b610a2460405180604001604052806016815260200175616d6f756e74496e202020202020202020203a20257360501b815250846114df565b610a5c60405180604001604052806016815260200175666972737450616972416d6f756e744f75743a20257360501b815250836114df565b610a946040518060400160405280601681526020017566696e616c416d6f756e744f7574202020203a20257360501b815250826114df565b6040805180820190915260168152756172622070726f66697420202020202020203a20257360501b6020820152610acf9061034a8386611570565b610b0d6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2054524144494e47202d2d2d2d2d2d2d2d2d00000000815250611588565b60405163022c0d9f60e01b81526001600160a01b0388169063022c0d9f90610b3e9085906000908f90600401611dd5565b600060405180830381600087803b158015610b5857600080fd5b505af1158015610b6c573d6000803e3d6000fd5b50505050610ba460405180604001604052806013815260200172666972737450616972207377617020646f6e6560681b815250611588565b60405163022c0d9f60e01b81526001600160a01b0387169063022c0d9f90610bd59060009085903090600401611dd5565b600060405180830381600087803b158015610bef57600080fd5b505af1158015610c03573d6000803e3d6000fd5b50505050610c3c604051806040016040528060148152602001737365636f6e6450616972207377617020646f6e6560601b815250611588565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc79190611d9f565b9050888111610d105760405162461bcd60e51b815260206004820152601060248201526f105c989a5d1c9859d94819985a5b195960821b60448201526064015b60405180910390fd5b610d4e6040518060400160405280601c81526020017f0a2d2d2d2d2d2d2d2d2d2053554343455353202d2d2d2d2d2d2d2d2d00000000815250611588565b610d8660405180604001604052806016815260200175456e64696e672062616c616e6365202020203a20257360501b815250826114df565b6000610d92828b611570565b9050610dcc6040518060400160405280601681526020017550726f6669742020202020202020202020203a20257360501b815250826114df565b6000610ddd60646102df848f6114c0565b604051632e1a7d4d60e01b8152600481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b158015610e4257600080fd5b505af1158015610e56573d6000803e3d6000fd5b505060405141925083156108fc02915083906000818181858888f19350505050158015610e87573d6000803e3d6000fd5b506000610e948383611570565b60405163a9059cbb60e01b8152326004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610f04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f289190611db8565b50505050505050505050505050505050565b610f4261183a565b6000836001600160a01b03168383604051610f5d9190611e2f565b60006040518083038185875af1925050503d8060008114610f9a576040519150601f19603f3d011682016040523d82523d6000602084013e610f9f565b606091505b5050905080610fe75760405162461bcd60e51b8152602060048201526014602482015273115e1d195c9b985b0818d85b1b0819985a5b195960621b6044820152606401610d07565b50505050565b610ff561183a565b610fff6000611894565b565b61100961183a565b6040514790339082156108fc029083906000818181858888f19350505050158015611038573d6000803e3d6000fd5b5050565b61104461183a565b604051632e1c224f60e11b815273ba12222222228d8ba445958a75a0704d566bf2c890635c38449e90611081903090879087908790600401611e77565b600060405180830381600087803b15801561109b57600080fd5b505af11580156110af573d6000803e3d6000fd5b50505050505050565b6110c061183a565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114b9190611d9f565b60405163a9059cbb60e01b8152336004820152602481018290529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af11580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110389190611db8565b6000806111ec848461028f565b905061121d6040518060400160405280600d81526020016c6e756d657261746f723a20257360981b815250826114df565b600061122985856103e2565b905061125c6040518060400160405280600f81526020016e64656e6f6d696e61746f723a20257360881b815250826114df565b600061126e826102df856103e86114c0565b9695505050505050565b3373ba12222222228d8ba445958a75a0704d566bf2c8146112ef5760405162461bcd60e51b815260206004820152602b60248201527f466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f60448201526a1d081d1a19481d985d5b1d60aa1b6064820152608401610d07565b6113206040518060400160405280601081526020016f3932b1b2b4bb32a33630b9b42637b0b760811b815250611588565b6000806000838060200190518101906113399190611f13565b92509250925061134a828483610476565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb73ba12222222228d8ba445958a75a0704d566bf2c8876000815181106113a1576113a1611f56565b6020026020010151896000815181106113bc576113bc611f56565b60200260200101516113ce9190611f82565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190611db8565b5050505050505050565b61144f61183a565b6001600160a01b0381166114b45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d07565b6114bd81611894565b50565b60006114cc8284611f9a565b9392505050565b60006114cc8284611fb9565b61103882826040516024016114f5929190611fdb565b60408051601f198184030181529190526020810180516001600160e01b03166309710a9d60e41b1790526118e4565b60008160000361153657506000919050565b600061154860026102df85600161157c565b9050825b808210156114cc57508061156960026102df8361043688826114d3565b915061154c565b60006114cc8284611ffd565b60006114cc8284611f82565b6114bd8160405160240161159c9190612014565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b1790526118e4565b6115f860405180608001604052806000815260200160008152602001600081526020016000151581525090565b600080836001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165d9190612043565b506001600160701b031691506001600160701b0316915061169b604051806040016040528060058152602001643830b4b91d60d91b81525085611905565b6116c6604051806040016040528060098152602001683932b9b2b93b32981d60b91b815250836114df565b6116f1604051806040016040528060098152602001683932b9b2b93b32989d60b91b815250826114df565b600080600090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015611760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117849190612093565b6001600160a01b0316036117b3576117a8846102df85670de0b6b3a76400006114c0565b9150600190506117cc565b6117c9836102df86670de0b6b3a76400006114c0565b91505b604080516080810182529485526020850193909352918301521515606082015292915050565b600080611801856103e56114c0565b9050600061180f82856114c0565b9050600061182383610436886103e86114c0565b905061182f8183611fb9565b979650505050505050565b6000546001600160a01b03163314610fff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d07565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b611038828260405160240161191b9291906120b0565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526118e4565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156119895761198961194a565b604052919050565b80151581146114bd57600080fd5b6000608082840312156119b157600080fd5b6040516080810181811067ffffffffffffffff821117156119d4576119d461194a565b80604052508091508235815260208301356020820152604083013560408201526060830135611a0281611991565b6060919091015292915050565b6000806101008385031215611a2357600080fd5b611a2d848461199f565b9150611a3c846080850161199f565b90509250929050565b6001600160a01b03811681146114bd57600080fd5b600080600060608486031215611a6f57600080fd5b8335611a7a81611a45565b92506020840135611a8a81611a45565b929592945050506040919091013590565b600082601f830112611aac57600080fd5b813567ffffffffffffffff811115611ac657611ac661194a565b611ad9601f8201601f1916602001611960565b818152846020838601011115611aee57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215611b2057600080fd5b8335611b2b81611a45565b925060208401359150604084013567ffffffffffffffff811115611b4e57600080fd5b611b5a86828701611a9b565b9150509250925092565b600067ffffffffffffffff821115611b7e57611b7e61194a565b5060051b60200190565b600082601f830112611b9957600080fd5b81356020611bae611ba983611b64565b611960565b82815260059290921b84018101918181019086841115611bcd57600080fd5b8286015b84811015611bf1578035611be481611a45565b8352918301918301611bd1565b509695505050505050565b600082601f830112611c0d57600080fd5b81356020611c1d611ba983611b64565b82815260059290921b84018101918181019086841115611c3c57600080fd5b8286015b84811015611bf15780358352918301918301611c40565b600080600060608486031215611c6c57600080fd5b833567ffffffffffffffff80821115611c8457600080fd5b611c9087838801611b88565b94506020860135915080821115611ca657600080fd5b611cb287838801611bfc565b93506040860135915080821115611cc857600080fd5b50611b5a86828701611a9b565b60008060008060808587031215611ceb57600080fd5b843567ffffffffffffffff80821115611d0357600080fd5b611d0f88838901611b88565b95506020870135915080821115611d2557600080fd5b611d3188838901611bfc565b94506040870135915080821115611d4757600080fd5b611d5388838901611bfc565b93506060870135915080821115611d6957600080fd5b50611d7687828801611a9b565b91505092959194509250565b600060208284031215611d9457600080fd5b81356114cc81611a45565b600060208284031215611db157600080fd5b5051919050565b600060208284031215611dca57600080fd5b81516114cc81611991565b92835260208301919091526001600160a01b0316604082015260806060820181905260009082015260a00190565b60005b83811015611e1e578181015183820152602001611e06565b83811115610fe75750506000910152565b60008251611e41818460208701611e03565b9190910192915050565b60008151808452611e63816020860160208601611e03565b601f01601f19169290920160200192915050565b6001600160a01b0385811682526080602080840182905286519184018290526000928782019290919060a0860190855b81811015611ec5578551851683529483019491830191600101611ea7565b5050858103604087015287518082529082019350915080870160005b83811015611efd57815185529382019390820190600101611ee1565b50505050828103606084015261182f8185611e4b565b600080600060608486031215611f2857600080fd5b8351611f3381611a45565b6020850151909350611f4481611a45565b80925050604084015190509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611f9557611f95611f6c565b500190565b6000816000190483118215151615611fb457611fb4611f6c565b500290565b600082611fd657634e487b7160e01b600052601260045260246000fd5b500490565b604081526000611fee6040830185611e4b565b90508260208301529392505050565b60008282101561200f5761200f611f6c565b500390565b6020815260006114cc6020830184611e4b565b80516001600160701b038116811461203e57600080fd5b919050565b60008060006060848603121561205857600080fd5b61206184612027565b925061206f60208501612027565b9150604084015163ffffffff8116811461208857600080fd5b809150509250925092565b6000602082840312156120a557600080fd5b81516114cc81611a45565b6040815260006120c36040830185611e4b565b905060018060a01b0383166020830152939250505056fe0a2d2d2d2d2d2d2d2d2d20545241444520414d4f554e5453202d2d2d2d2d2d2d2d2da26469706673582212203a5020697b87f538eac82eeeb24dab257ed00103d26852aae431eb9ab706d9d864736f6c634300080f0033",
    "sourceMap": "1140:1255:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5914:1457:23;;;;;;;;;;-1:-1:-1;5914:1457:23;;;;;:::i;:::-;;:::i;:::-;;;1750:25:28;;;1738:2;1723:18;5914:1457:23;;;;;;;;922:37;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1950:32:28;;;1932:51;;1920:2;1905:18;922:37:23;1786:203:28;7377:1027:23;;;;;;;;;;-1:-1:-1;7377:1027:23;;;;;:::i;:::-;;:::i;1395:3608::-;;;;;;;;;;-1:-1:-1;1395:3608:23;;;;;:::i;:::-;;:::i;:::-;;11497:206;;;;;;;;;;-1:-1:-1;11497:206:23;;;;;:::i;:::-;;:::i;1824:101:0:-;;;;;;;;;;;;;:::i;10960:152:23:-;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;1373:210:26;;;;;;;;;;-1:-1:-1;1373:210:26;;;;;:::i;:::-;;:::i;10625:190:23:-;;;;;;;;;;;;;:::i;5346:562::-;;;;;;;;;;-1:-1:-1;5346:562:23;;;;;:::i;:::-;;:::i;1589:804:26:-;;;;;;;;;;-1:-1:-1;1589:804:26;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;5914:1457:23:-;6102:24;;;;6079:7;;6102:32;;6130:4;6102:32;6098:1267;;6150:12;6182:249;6408:13;:22;;;6182:200;6358:14;:23;;;6182:150;6308:14;:23;;;6182:100;6259:13;:22;;;6182:51;6220:12;;6182;;:37;;:51;;;;:::i;:::-;:76;;:100::i;:150::-;:175;;:200::i;:249::-;6150:281;;6445:35;;;;;;;;;;;;;;-1:-1:-1;;;6445:35:23;;;6472:7;6445:11;:35::i;:::-;6494:47;;;;;;;;;;;;;;-1:-1:-1;;;6494:47:23;;;6527:13;6532:7;6527:4;:13::i;:::-;6494:11;:47::i;:::-;6555:17;6588:166;6731:13;:22;;;6588:125;6689:14;:23;;;6606:39;6641:3;6606:13;6611:7;6606:4;:13::i;:::-;:34;;:39::i;6588:166::-;6555:199;-1:-1:-1;6769:16:23;;-1:-1:-1;;6769:16:23;6098:1267;6816:12;6848:249;7074:13;:22;;;6848:200;7024:14;:23;;;6848:150;6974:14;:23;;;6848:100;6925:13;:22;;;6848:51;6886:12;;6848;;:37;;:51;;;;:::i;:249::-;6816:281;;7124:17;7157:166;7300:13;:22;;;7157:125;7258:14;:23;;;7175:39;7210:3;7175:13;7180:7;7175:4;:13::i;6098:1267::-;5914:1457;;;;:::o;7377:1027::-;7578:24;;;;7556:7;;7578:32;;7606:4;7578:32;7574:824;;7626:19;7665:294;7841:100;7918:13;:22;;;7841:51;7879:12;;7841;;:37;;:51;;;;:::i;:100::-;7687:93;7775:4;7687:62;7725:14;:23;;;7687:12;;:37;;:62;;;;:::i;:93::-;7665:154;;:294::i;:::-;7626:333;-1:-1:-1;7973:18:23;;-1:-1:-1;7973:18:23;7574:824;8314:22;;8275:12;;8022:19;;8061:294;;8237:100;;8314:22;8237:51;;8275:12;8237:37;:51::i;:100::-;8121:23;;8083:12;;:93;;8171:4;;8083:62;;:37;:62::i;1395:3608::-;1577:45;;-1:-1:-1;;;1577:45:23;;1616:4;1577:45;;;1932:51:28;1553:21:23;;1584:12;-1:-1:-1;;;;;1577:30:23;;;;1905:18:28;;1577:45:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1553:69;;1632:52;;;;;;;;;;;;;;-1:-1:-1;;;1632:52:23;;;1670:13;1632:11;:52::i;:::-;1835:46;;;;;;;;;;;;;;;;;1736:16;;1806:17;;1835:46;;:11;:46::i;:::-;1892:47;1942:22;1954:9;1942:11;:22::i;:::-;1892:72;;1974:48;2025:23;2037:10;2025:11;:23::i;:::-;1974:74;;2059:43;;;;;;;;;;;;;;;;;;:11;:43::i;:::-;2112:58;;;;;;;;;;;;;;-1:-1:-1;;;2112:58:23;;;2150:13;:19;;;2112:11;:58::i;:::-;2180:59;;;;;;;;;;;;;;-1:-1:-1;;;2180:59:23;;;2218:14;:20;;;2180:11;:59::i;:::-;2250:16;2269:42;2281:13;2296:14;2269:11;:42::i;:::-;2250:61;;2325:50;;;;;;;;;;;;;;;;;;:11;:50::i;:::-;2389:47;;;;;;;;;;;;;;-1:-1:-1;;;2389:47:23;;;2427:8;2389:11;:47::i;:::-;2447:57;;-1:-1:-1;;;2447:57:23;;-1:-1:-1;;;;;7791:32:28;;;2447:57:23;;;7773:51:28;7840:18;;;7833:34;;;2454:12:23;2447:29;;;;7746:18:28;;2447:57:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2523:26;2559:22;2595:13;:24;;;:32;;2623:4;2595:32;;;2591:1715;;2663:70;2676:8;2686:13;:22;;;2710:13;:22;;;2663:12;:70::i;:::-;2642:91;;2764:82;2777:18;2797:14;:23;;;2822:14;:23;;;2764:12;:82::i;:::-;2747:99;;2861:57;;;;;;;;;;;;;;-1:-1:-1;;;2861:57:23;;;2899:18;2861:11;:57::i;:::-;2932:53;;;;;;;;;;;;;;-1:-1:-1;;;2932:53:23;;;2970:14;2932:11;:53::i;:::-;2999:69;;;;;;;;;;;;-1:-1:-1;;;2999:69:23;;;;;;3038:28;:14;3057:8;3038:18;:28::i;2999:69::-;3095:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;3154:60;;-1:-1:-1;;;3154:60:23;;-1:-1:-1;;;;;3154:14:23;;;;;:60;;3169:1;;3172:18;;3192:17;;3154:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3228:34;;;;;;;;;;;;;;-1:-1:-1;;;3228:34:23;;;:11;:34::i;:::-;3289:53;;-1:-1:-1;;;3289:53:23;;-1:-1:-1;;;;;3289:15:23;;;;;:53;;3305:14;;3321:1;;3332:4;;3289:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3356:35;;;;;;;;;;;;;;-1:-1:-1;;;3356:35:23;;;:11;:35::i;:::-;2591:1715;;;3443:70;3456:8;3466:13;:22;;;3490:13;:22;;;3443:12;:70::i;:::-;3422:91;;3544:82;3557:18;3577:14;:23;;;3602:14;:23;;;3544:12;:82::i;:::-;3527:99;;3640:50;;;;;;;;;;;;;;;;;;:11;:50::i;:::-;3704:47;;;;;;;;;;;;;;-1:-1:-1;;;3704:47:23;;;3742:8;3704:11;:47::i;:::-;3765:57;;;;;;;;;;;;;;-1:-1:-1;;;3765:57:23;;;3803:18;3765:11;:57::i;:::-;3836:53;;;;;;;;;;;;;;-1:-1:-1;;;3836:53:23;;;3874:14;3836:11;:53::i;:::-;3903:69;;;;;;;;;;;;-1:-1:-1;;;3903:69:23;;;;;;3942:28;:14;3961:8;3942:18;:28::i;3903:69::-;3999:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;4058:60;;-1:-1:-1;;;4058:60:23;;-1:-1:-1;;;;;4058:14:23;;;;;:60;;4073:18;;4093:1;;4096:17;;4058:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4132:34;;;;;;;;;;;;;;-1:-1:-1;;;4132:34:23;;;:11;:34::i;:::-;4193:53;;-1:-1:-1;;;4193:53:23;;-1:-1:-1;;;;;4193:15:23;;;;;:53;;4209:1;;4212:14;;4236:4;;4193:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4260:35;;;;;;;;;;;;;;-1:-1:-1;;;4260:35:23;;;:11;:35::i;:::-;4347:45;;-1:-1:-1;;;4347:45:23;;4386:4;4347:45;;;1932:51:28;4324:20:23;;4354:12;-1:-1:-1;;;;;4347:30:23;;;;1905:18:28;;4347:45:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4324:68;;4425:13;4410:12;:28;4402:57;;;;-1:-1:-1;;;4402:57:23;;9406:2:28;4402:57:23;;;9388:21:28;9445:2;9425:18;;;9418:30;-1:-1:-1;;;9464:18:28;;;9457:46;9520:18;;4402:57:23;;;;;;;;;4469:44;;;;;;;;;;;;;;;;;;:11;:44::i;:::-;4523:51;;;;;;;;;;;;;;-1:-1:-1;;;4523:51:23;;;4561:12;4523:11;:51::i;:::-;4584:11;4598:31;:12;4615:13;4598:16;:31::i;:::-;4584:45;;4639;;;;;;;;;;;;;;-1:-1:-1;;;4639:45:23;;;4677:6;4639:11;:45::i;:::-;4694:21;4718:46;4760:3;4718:37;:6;4729:25;4718:10;:37::i;:46::-;4774;;-1:-1:-1;;;4774:46:23;;;;;1750:25:28;;;4694:70:23;;-1:-1:-1;4780:12:23;-1:-1:-1;;;;;4774:28:23;;;;1723:18:28;;4774:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4830:41:23;;:14;;-1:-1:-1;4830:41:23;;;;;-1:-1:-1;4854:16:23;;4830:41;;;;4854:16;4830:14;:41;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4881:19:23;4903:28;:6;4914:16;4903:10;:28::i;:::-;4941:55;;-1:-1:-1;;;4941:55:23;;4970:9;4941:55;;;7773:51:28;7840:18;;;7833:34;;;4881:50:23;;-1:-1:-1;4947:12:23;-1:-1:-1;;;;;4941:28:23;;;;7746:18:28;;4941:55:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1543:3460;;;;;;;;;;;;1395:3608;;;:::o;11497:206::-;1094:13:0;:11;:13::i;:::-;11598:12:23::1;11616:3;-1:-1:-1::0;;;;;11616:8:23::1;11632:6;11640:5;11616:30;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11597:49;;;11664:7;11656:40;;;::::0;-1:-1:-1;;;11656:40:23;;10293:2:28;11656:40:23::1;::::0;::::1;10275:21:28::0;10332:2;10312:18;;;10305:30;-1:-1:-1;;;10351:18:28;;;10344:50;10411:18;;11656:40:23::1;10091:344:28::0;11656:40:23::1;11587:116;11497:206:::0;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;10960:152:23:-;1094:13:0;:11;:13::i;:::-;11068:37:23::1;::::0;11037:21:::1;::::0;11076:10:::1;::::0;11068:37;::::1;;;::::0;11037:21;;11019:15:::1;11068:37:::0;11019:15;11068:37;11037:21;11076:10;11068:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;11009:103;10960:152::o:0;1373:210:26:-;1094:13:0;:11;:13::i;:::-;1528:48:26::1;::::0;-1:-1:-1;;;1528:48:26;;1254:42:::1;::::0;1528:15:::1;::::0;:48:::1;::::0;1544:4:::1;::::0;1550:6;;1558:7;;1567:8;;1528:48:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1373:210:::0;;;:::o;10625:190:23:-;1094:13:0;:11;:13::i;:::-;10703:45:23::1;::::0;-1:-1:-1;;;10703:45:23;;10742:4:::1;10703:45;::::0;::::1;1932:51:28::0;10685:15:23::1;::::0;10710:12:::1;-1:-1:-1::0;;;;;10703:30:23::1;::::0;::::1;::::0;1905:18:28;;10703:45:23::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10758:50;::::0;-1:-1:-1;;;10758:50:23;;10788:10:::1;10758:50;::::0;::::1;7773:51:28::0;7840:18;;;7833:34;;;10685:63:23;;-1:-1:-1;10765:12:23::1;-1:-1:-1::0;;;;;10758:29:23::1;::::0;::::1;::::0;7746:18:28;;10758:50:23::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5346:562::-:0;5510:7;5529:17;5549:43;5562:13;5577:14;5549:12;:43::i;:::-;5529:63;;5602:39;;;;;;;;;;;;;;-1:-1:-1;;;5602:39:23;;;5631:9;5602:11;:39::i;:::-;5651:19;5673:45;5688:13;5703:14;5673;:45::i;:::-;5651:67;;5728:43;;;;;;;;;;;;;;-1:-1:-1;;;5728:43:23;;;5759:11;5728;:43::i;:::-;5781:16;5813:62;5863:11;5813:32;:9;5840:4;5813:26;:32::i;:62::-;5781:94;5346:562;-1:-1:-1;;;;;;5346:562:23:o;1589:804:26:-;1795:10;1254:42;1795:28;1774:118;;;;-1:-1:-1;;;1774:118:26;;12357:2:28;1774:118:26;;;12339:21:28;12396:2;12376:18;;;12369:30;12435:34;12415:18;;;12408:62;-1:-1:-1;;;12486:18:28;;;12479:41;12537:19;;1774:118:26;12155:407:28;1774:118:26;1902:31;;;;;;;;;;;;;;-1:-1:-1;;;1902:31:26;;;:11;:31::i;:::-;1958:24;1996:25;2035:33;2092:8;2081:49;;;;;;;;;;;;:::i;:::-;1944:186;;;;;;2141:126;2171:17;2202:16;2232:25;2141:16;:126::i;:::-;2284:12;-1:-1:-1;;;;;2278:28:26;;1254:42;2362:10;2373:1;2362:13;;;;;;;;:::i;:::-;;;;;;;2348:7;2356:1;2348:10;;;;;;;;:::i;:::-;;;;;;;:28;;;;:::i;:::-;2278:108;;-1:-1:-1;;;;;;2278:108:26;;;;;;;-1:-1:-1;;;;;7791:32:28;;;2278:108:26;;;7773:51:28;7840:18;;;7833:34;7746:18;;2278:108:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1764:629;;;1589:804;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;13633:2:28;2154:73:0::1;::::0;::::1;13615:21:28::0;13672:2;13652:18;;;13645:30;13711:34;13691:18;;;13684:62;-1:-1:-1;;;13762:18:28;;;13755:36;13808:19;;2154:73:0::1;13431:402:28::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;3465:96:5:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:5:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;6548:139:20:-;6612:68;6672:2;6676;6628:51;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;6628:51:20;;;;;;;;;;;;;;-1:-1:-1;;;;;6628:51:20;-1:-1:-1;;;6628:51:20;;;6612:15;:68::i;9533:268:23:-;9580:7;9603:1;9608;9603:6;9599:20;;-1:-1:-1;9618:1:23;;9533:268;-1:-1:-1;9533:268:23:o;9599:20::-;9629:9;9641:15;9654:1;9641:8;:1;9647;9641:5;:8::i;:15::-;9629:27;-1:-1:-1;9678:1:23;9689:88;9700:1;9696;:5;9689:88;;;-1:-1:-1;9721:1:23;9740:26;9764:1;9741:17;9721:1;9742:8;:1;9721;9742:5;:8::i;9740:26::-;9736:30;;9689:88;;3122:96:5;3180:7;3206:5;3210:1;3206;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;5630:121:20:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:42:20;;;;;;;;;;;;;;-1:-1:-1;;;;;5701:42:20;-1:-1:-1;;;5701:42:20;;;5685:15;:59::i;8689:659:23:-;8753:33;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8753:33:23;8799:16;8817;8839:4;-1:-1:-1;;;;;8839:16:23;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8798:59;-1:-1:-1;;;;;8798:59:23;;;-1:-1:-1;;;;;8798:59:23;;;8867:35;;;;;;;;;;;;;;-1:-1:-1;;;8867:35:23;;;8896:4;8867:11;:35::i;:::-;8912:33;;;;;;;;;;;;;;-1:-1:-1;;;8912:33:23;;;8936:8;8912:11;:33::i;:::-;8955:34;;;;;;;;;;;;;;-1:-1:-1;;;8955:34:23;;;8980:8;8955:11;:34::i;:::-;9000:13;9024:15;9042:5;9024:23;;9078:12;-1:-1:-1;;;;;9061:29:23;:4;-1:-1:-1;;;;;9061:11:23;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;9061:29:23;;9057:202;;9114:32;9137:8;9114:18;:8;9127:4;9114:12;:18::i;:32::-;9106:40;;9173:4;9160:17;;9057:202;;;9216:32;9239:8;9216:18;:8;9229:4;9216:12;:18::i;:32::-;9208:40;;9057:202;9276:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8689:659;-1:-1:-1;;8689:659:23:o;10094:385::-;10208:14;;10257:17;:8;10270:3;10257:12;:17::i;:::-;10234:40;-1:-1:-1;10284:14:23;10301:31;10234:40;10321:10;10301:19;:31::i;:::-;10284:48;-1:-1:-1;10342:16:23;10361:40;10385:15;10361:19;:9;10375:4;10361:13;:19::i;:40::-;10342:59;-1:-1:-1;10423:23:23;10342:59;10423:9;:23;:::i;:::-;10411:35;10094:385;-1:-1:-1;;;;;;;10094:385:23:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;719:10:4;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;15988:2:28;1414:68:0;;;15970:21:28;;;16007:18;;;16000:30;16066:34;16046:18;;;16039:62;16118:18;;1414:68:0;15786:356:28;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;181:376:20:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;6994:145::-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:20;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:20;-1:-1:-1;;;7077:54:20;;;7061:15;:71::i;14:127:28:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:28;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:28:o;426:118::-;512:5;505:13;498:21;491:5;488:32;478:60;;534:1;531;524:12;549:679;608:5;656:4;644:9;639:3;635:19;631:30;628:50;;;674:1;671;664:12;628:50;707:2;701:9;749:4;741:6;737:17;820:6;808:10;805:22;784:18;772:10;769:34;766:62;763:88;;;831:18;;:::i;:::-;871:10;867:2;860:22;;900:6;891:15;;943:9;930:23;922:6;915:39;1015:2;1004:9;1000:18;987:32;982:2;974:6;970:15;963:57;1081:2;1070:9;1066:18;1053:32;1048:2;1040:6;1036:15;1029:57;1138:2;1127:9;1123:18;1110:32;1151:30;1173:7;1151:30;:::i;:::-;1209:2;1197:15;;;;1190:32;549:679;;-1:-1:-1;;549:679:28:o;1233:366::-;1363:6;1371;1424:3;1412:9;1403:7;1399:23;1395:33;1392:53;;;1441:1;1438;1431:12;1392:53;1464:50;1506:7;1495:9;1464:50;:::i;:::-;1454:60;;1533;1585:7;1579:3;1568:9;1564:19;1533:60;:::i;:::-;1523:70;;1233:366;;;;;:::o;1994:131::-;-1:-1:-1;;;;;2069:31:28;;2059:42;;2049:70;;2115:1;2112;2105:12;2130:456;2207:6;2215;2223;2276:2;2264:9;2255:7;2251:23;2247:32;2244:52;;;2292:1;2289;2282:12;2244:52;2331:9;2318:23;2350:31;2375:5;2350:31;:::i;:::-;2400:5;-1:-1:-1;2457:2:28;2442:18;;2429:32;2470:33;2429:32;2470:33;:::i;:::-;2130:456;;2522:7;;-1:-1:-1;;;2576:2:28;2561:18;;;;2548:32;;2130:456::o;2591:530::-;2633:5;2686:3;2679:4;2671:6;2667:17;2663:27;2653:55;;2704:1;2701;2694:12;2653:55;2740:6;2727:20;2766:18;2762:2;2759:26;2756:52;;;2788:18;;:::i;:::-;2832:55;2875:2;2856:13;;-1:-1:-1;;2852:27:28;2881:4;2848:38;2832:55;:::i;:::-;2912:2;2903:7;2896:19;2958:3;2951:4;2946:2;2938:6;2934:15;2930:26;2927:35;2924:55;;;2975:1;2972;2965:12;2924:55;3040:2;3033:4;3025:6;3021:17;3014:4;3005:7;3001:18;2988:55;3088:1;3063:16;;;3081:4;3059:27;3052:38;;;;3067:7;2591:530;-1:-1:-1;;;2591:530:28:o;3126:531::-;3220:6;3228;3236;3289:2;3277:9;3268:7;3264:23;3260:32;3257:52;;;3305:1;3302;3295:12;3257:52;3344:9;3331:23;3363:31;3388:5;3363:31;:::i;:::-;3413:5;-1:-1:-1;3465:2:28;3450:18;;3437:32;;-1:-1:-1;3520:2:28;3505:18;;3492:32;3547:18;3536:30;;3533:50;;;3579:1;3576;3569:12;3533:50;3602:49;3643:7;3634:6;3623:9;3619:22;3602:49;:::i;:::-;3592:59;;;3126:531;;;;;:::o;3662:191::-;3730:4;3763:18;3755:6;3752:30;3749:56;;;3785:18;;:::i;:::-;-1:-1:-1;3830:1:28;3826:14;3842:4;3822:25;;3662:191::o;3858:753::-;3920:5;3973:3;3966:4;3958:6;3954:17;3950:27;3940:55;;3991:1;3988;3981:12;3940:55;4027:6;4014:20;4053:4;4077:68;4093:51;4141:2;4093:51;:::i;:::-;4077:68;:::i;:::-;4179:15;;;4265:1;4261:10;;;;4249:23;;4245:32;;;4210:12;;;;4289:15;;;4286:35;;;4317:1;4314;4307:12;4286:35;4353:2;4345:6;4341:15;4365:217;4381:6;4376:3;4373:15;4365:217;;;4461:3;4448:17;4478:31;4503:5;4478:31;:::i;:::-;4522:18;;4560:12;;;;4398;;4365:217;;;-1:-1:-1;4600:5:28;3858:753;-1:-1:-1;;;;;;3858:753:28:o;4616:670::-;4670:5;4723:3;4716:4;4708:6;4704:17;4700:27;4690:55;;4741:1;4738;4731:12;4690:55;4777:6;4764:20;4803:4;4827:68;4843:51;4891:2;4843:51;:::i;4827:68::-;4929:15;;;5015:1;5011:10;;;;4999:23;;4995:32;;;4960:12;;;;5039:15;;;5036:35;;;5067:1;5064;5057:12;5036:35;5103:2;5095:6;5091:15;5115:142;5131:6;5126:3;5123:15;5115:142;;;5197:17;;5185:30;;5235:12;;;;5148;;5115:142;;5291:815;5441:6;5449;5457;5510:2;5498:9;5489:7;5485:23;5481:32;5478:52;;;5526:1;5523;5516:12;5478:52;5566:9;5553:23;5595:18;5636:2;5628:6;5625:14;5622:34;;;5652:1;5649;5642:12;5622:34;5675:69;5736:7;5727:6;5716:9;5712:22;5675:69;:::i;:::-;5665:79;;5797:2;5786:9;5782:18;5769:32;5753:48;;5826:2;5816:8;5813:16;5810:36;;;5842:1;5839;5832:12;5810:36;5865:63;5920:7;5909:8;5898:9;5894:24;5865:63;:::i;:::-;5855:73;;5981:2;5970:9;5966:18;5953:32;5937:48;;6010:2;6000:8;5997:16;5994:36;;;6026:1;6023;6016:12;5994:36;;6049:51;6092:7;6081:8;6070:9;6066:24;6049:51;:::i;6111:1042::-;6295:6;6303;6311;6319;6372:3;6360:9;6351:7;6347:23;6343:33;6340:53;;;6389:1;6386;6379:12;6340:53;6429:9;6416:23;6458:18;6499:2;6491:6;6488:14;6485:34;;;6515:1;6512;6505:12;6485:34;6538:69;6599:7;6590:6;6579:9;6575:22;6538:69;:::i;:::-;6528:79;;6660:2;6649:9;6645:18;6632:32;6616:48;;6689:2;6679:8;6676:16;6673:36;;;6705:1;6702;6695:12;6673:36;6728:63;6783:7;6772:8;6761:9;6757:24;6728:63;:::i;:::-;6718:73;;6844:2;6833:9;6829:18;6816:32;6800:48;;6873:2;6863:8;6860:16;6857:36;;;6889:1;6886;6879:12;6857:36;6912:63;6967:7;6956:8;6945:9;6941:24;6912:63;:::i;:::-;6902:73;;7028:2;7017:9;7013:18;7000:32;6984:48;;7057:2;7047:8;7044:16;7041:36;;;7073:1;7070;7063:12;7041:36;;7096:51;7139:7;7128:8;7117:9;7113:24;7096:51;:::i;:::-;7086:61;;;6111:1042;;;;;;;:::o;7158:247::-;7217:6;7270:2;7258:9;7249:7;7245:23;7241:32;7238:52;;;7286:1;7283;7276:12;7238:52;7325:9;7312:23;7344:31;7369:5;7344:31;:::i;7410:184::-;7480:6;7533:2;7521:9;7512:7;7508:23;7504:32;7501:52;;;7549:1;7546;7539:12;7501:52;-1:-1:-1;7572:16:28;;7410:184;-1:-1:-1;7410:184:28:o;7878:245::-;7945:6;7998:2;7986:9;7977:7;7973:23;7969:32;7966:52;;;8014:1;8011;8004:12;7966:52;8046:9;8040:16;8065:28;8087:5;8065:28;:::i;8128:533::-;8403:25;;;8459:2;8444:18;;8437:34;;;;-1:-1:-1;;;;;8507:32:28;8502:2;8487:18;;8480:60;8576:3;8571:2;8556:18;;8549:31;;;-1:-1:-1;8596:19:28;;;8589:30;8527:3;8636:19;;8128:533::o;9549:258::-;9621:1;9631:113;9645:6;9642:1;9639:13;9631:113;;;9721:11;;;9715:18;9702:11;;;9695:39;9667:2;9660:10;9631:113;;;9762:6;9759:1;9756:13;9753:48;;;-1:-1:-1;;9797:1:28;9779:16;;9772:27;9549:258::o;9812:274::-;9941:3;9979:6;9973:13;9995:53;10041:6;10036:3;10029:4;10021:6;10017:17;9995:53;:::i;:::-;10064:16;;;;;9812:274;-1:-1:-1;;9812:274:28:o;10440:257::-;10481:3;10519:5;10513:12;10546:6;10541:3;10534:19;10562:63;10618:6;10611:4;10606:3;10602:14;10595:4;10588:5;10584:16;10562:63;:::i;:::-;10679:2;10658:15;-1:-1:-1;;10654:29:28;10645:39;;;;10686:4;10641:50;;10440:257;-1:-1:-1;;10440:257:28:o;10702:1448::-;-1:-1:-1;;;;;11151:15:28;;;11133:34;;11082:3;11186:2;11204:18;;;11197:31;;;11277:13;;11067:19;;;11299:22;;;11034:4;;11379:15;;;;11105:19;;11186:2;11113:3;11337:19;;;11034:4;11422:178;11436:6;11433:1;11430:13;11422:178;;;11501:13;;11497:22;;11485:35;;11575:15;;;;11540:12;;;;11458:1;11451:9;11422:178;;;-1:-1:-1;;11636:19:28;;;11631:2;11616:18;;11609:47;11706:13;;11728:21;;;11767:12;;;;-1:-1:-1;11706:13:28;-1:-1:-1;11804:15:28;;;11839:1;11849:189;11865:8;11860:3;11857:17;11849:189;;;11934:15;;11920:30;;11972:14;;;;12011:17;;;;11893:1;11884:11;11849:189;;;11853:3;;;;12085:9;12078:5;12074:21;12069:2;12058:9;12054:18;12047:49;12113:31;12138:5;12130:6;12113:31;:::i;12567:462::-;12671:6;12679;12687;12740:2;12728:9;12719:7;12715:23;12711:32;12708:52;;;12756:1;12753;12746:12;12708:52;12788:9;12782:16;12807:31;12832:5;12807:31;:::i;:::-;12907:2;12892:18;;12886:25;12857:5;;-1:-1:-1;12920:33:28;12886:25;12920:33;:::i;:::-;12972:7;12962:17;;;13019:2;13008:9;13004:18;12998:25;12988:35;;12567:462;;;;;:::o;13034:127::-;13095:10;13090:3;13086:20;13083:1;13076:31;13126:4;13123:1;13116:15;13150:4;13147:1;13140:15;13166:127;13227:10;13222:3;13218:20;13215:1;13208:31;13258:4;13255:1;13248:15;13282:4;13279:1;13272:15;13298:128;13338:3;13369:1;13365:6;13362:1;13359:13;13356:39;;;13375:18;;:::i;:::-;-1:-1:-1;13411:9:28;;13298:128::o;13838:168::-;13878:7;13944:1;13940;13936:6;13932:14;13929:1;13926:21;13921:1;13914:9;13907:17;13903:45;13900:71;;;13951:18;;:::i;:::-;-1:-1:-1;13991:9:28;;13838:168::o;14011:217::-;14051:1;14077;14067:132;;14121:10;14116:3;14112:20;14109:1;14102:31;14156:4;14153:1;14146:15;14184:4;14181:1;14174:15;14067:132;-1:-1:-1;14213:9:28;;14011:217::o;14233:290::-;14410:2;14399:9;14392:21;14373:4;14430:44;14470:2;14459:9;14455:18;14447:6;14430:44;:::i;:::-;14422:52;;14510:6;14505:2;14494:9;14490:18;14483:34;14233:290;;;;;:::o;14528:125::-;14568:4;14596:1;14593;14590:8;14587:34;;;14601:18;;:::i;:::-;-1:-1:-1;14638:9:28;;14528:125::o;14658:219::-;14807:2;14796:9;14789:21;14770:4;14827:44;14867:2;14856:9;14852:18;14844:6;14827:44;:::i;14882:188::-;14961:13;;-1:-1:-1;;;;;15003:42:28;;14993:53;;14983:81;;15060:1;15057;15050:12;14983:81;14882:188;;;:::o;15075:450::-;15162:6;15170;15178;15231:2;15219:9;15210:7;15206:23;15202:32;15199:52;;;15247:1;15244;15237:12;15199:52;15270:40;15300:9;15270:40;:::i;:::-;15260:50;;15329:49;15374:2;15363:9;15359:18;15329:49;:::i;:::-;15319:59;;15421:2;15410:9;15406:18;15400:25;15465:10;15458:5;15454:22;15447:5;15444:33;15434:61;;15491:1;15488;15481:12;15434:61;15514:5;15504:15;;;15075:450;;;;;:::o;15530:251::-;15600:6;15653:2;15641:9;15632:7;15628:23;15624:32;15621:52;;;15669:1;15666;15659:12;15621:52;15701:9;15695:16;15720:31;15745:5;15720:31;:::i;16147:316::-;16324:2;16313:9;16306:21;16287:4;16344:44;16384:2;16373:9;16369:18;16361:6;16344:44;:::i;:::-;16336:52;;16453:1;16449;16444:3;16440:11;16436:19;16428:6;16424:32;16419:2;16408:9;16404:18;16397:60;16147:316;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
<<<<<<< HEAD
      "31723": [
>>>>>>> 1ff740e (style: remove unused code)
=======
      "31767": [
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        {
          "start": 278,
          "length": 32
        },
        {
          "start": 1166,
          "length": 32
        },
        {
          "start": 1753,
          "length": 32
        },
        {
          "start": 3156,
          "length": 32
        },
        {
          "start": 3574,
          "length": 32
        },
        {
<<<<<<< HEAD
<<<<<<< HEAD
          "start": 3763,
          "length": 32
        },
        {
          "start": 4312,
          "length": 32
        },
        {
          "start": 4458,
          "length": 32
        },
        {
          "start": 4940,
          "length": 32
        },
        {
          "start": 5882,
=======
          "start": 4150,
=======
          "start": 3763,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
          "length": 32
        },
        {
          "start": 4312,
          "length": 32
        },
        {
          "start": 4458,
          "length": 32
        },
        {
<<<<<<< HEAD
          "start": 5720,
>>>>>>> 1ff740e (style: remove unused code)
=======
          "start": 4940,
          "length": 32
        },
        {
          "start": 5882,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "WETH_ADDRESS()": "040141e5",
    "call(address,uint256,bytes)": "6dbf2fa0",
    "executeArbitrage(address,address,uint256)": "650f84be",
    "getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))": "eb6b2116",
    "getDenominator((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))": "1fa7d39b",
    "getNumerator((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))": "00bb7d67",
    "makeFlashLoan(address[],uint256[],bytes)": "c9a69562",
    "owner()": "8da5cb5b",
    "receiveFlashLoan(address[],uint256[],uint256[],bytes)": "f04f2707",
    "renounceOwnership()": "715018a6",
    "transferOwnership(address)": "f2fde38b",
    "withdrawETHToOwner()": "77432b8c",
    "withdrawWETHToOwner()": "ea3e506c"
  },
<<<<<<< HEAD
<<<<<<< HEAD
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"firstPairAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"secondPairAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageToPayToCoinbase\",\"type\":\"uint256\"}],\"name\":\"executeArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"makeFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"call(address,uint256,bytes)\":{\"details\":\"Only the contract owner can call this function.Reverted calls will result in a revert. \",\"params\":{\"_data\":\"The calldata to send with the call.\",\"_to\":\"The address of the contract to call.\",\"_value\":\"The amount of Ether to send with the call.\"}},\"executeArbitrage(address,address,uint256)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"firstPairAddress\":\"Address of the first Uniswap V2 pair.\",\"secondPairAddress\":\"Address of the second Uniswap V2 pair.\"}},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"params\":{\"firstPairData\":\"Struct containing data about the first Uniswap V2 pair.\",\"secondPairData\":\"Struct containing data about the second Uniswap V2 pair.\"},\"returns\":{\"_0\":\"amountIn, the optimal amount to trade to arbitrage two v2 pairs.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"},\"withdrawWETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"call(address,uint256,bytes)\":{\"notice\":\"Executes a call to another contract with the provided data and value.\"},\"executeArbitrage(address,address,uint256)\":{\"notice\":\"Executes an arbitrage transaction between two Uniswap V2 pairs.Pair addresses need to be computed off-chain.\"},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"notice\":\"Calculates the required input amount for the arbitrage transaction.\"},\"withdrawETHToOwner()\":{\"notice\":\"Transfers all ETH held by the contract to the contract owner.\"},\"withdrawWETHToOwner()\":{\"notice\":\"Transfers all WETH held by the contract to the contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blindBackrunFL.sol\":\"BlindBackrunFL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/BlindBackrunDebug.sol\":{\"keccak256\":\"0x827673841226ac2a1c7f1da6172767e30ab8f64607a872fe8d85054c1ce9547f\",\"urls\":[\"bzz-raw://d20601b78e58ec0fe3bf250ea18d3a871d195669e37c88b2d995d0135c6d9e47\",\"dweb:/ipfs/QmUM76dLMkX7tvwQxGZCuL2nXdqVfE92nJgFYK7Qyp5aua\"]},\"src/blindBackrunFL.sol\":{\"keccak256\":\"0x54e8ef7e52f3a1f7c89779d6109b8f80b5488065e3cd102cfc8d35e66556a4a6\",\"urls\":[\"bzz-raw://e8471a6581c7cad673898fb81f53fa2c4ee90cd0af29e9af57b2e2eae69a0b5b\",\"dweb:/ipfs/QmVzmXzXKhC7Jru2oLTtVB1RAJXtGyupRuxjVj9sAWrpfo\"]}},\"version\":1}",
=======
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"firstPairAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"secondPairAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageToPayToCoinbase\",\"type\":\"uint256\"}],\"name\":\"executeArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"makeFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"call(address,uint256,bytes)\":{\"details\":\"Only the contract owner can call this function.Reverted calls will result in a revert. \",\"params\":{\"_data\":\"The calldata to send with the call.\",\"_to\":\"The address of the contract to call.\",\"_value\":\"The amount of Ether to send with the call.\"}},\"executeArbitrage(address,address,uint256)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"firstPairAddress\":\"Address of the first Uniswap V2 pair.\",\"secondPairAddress\":\"Address of the second Uniswap V2 pair.\"}},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"params\":{\"firstPairData\":\"Struct containing data about the first Uniswap V2 pair.\",\"secondPairData\":\"Struct containing data about the second Uniswap V2 pair.\"},\"returns\":{\"_0\":\"amountIn, the optimal amount to trade to arbitrage two v2 pairs.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"},\"withdrawWETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"call(address,uint256,bytes)\":{\"notice\":\"Executes a call to another contract with the provided data and value.\"},\"executeArbitrage(address,address,uint256)\":{\"notice\":\"Executes an arbitrage transaction between two Uniswap V2 pairs.Pair addresses need to be computed off-chain.\"},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"notice\":\"Calculates the required input amount for the arbitrage transaction.\"},\"withdrawETHToOwner()\":{\"notice\":\"Transfers all ETH held by the contract to the contract owner.\"},\"withdrawWETHToOwner()\":{\"notice\":\"Transfers all WETH held by the contract to the contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blindBackrunFL.sol\":\"BlindBackrunFL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/BlindBackrunDebug.sol\":{\"keccak256\":\"0xce18f26001415c69ceb97fd4c62548b4abed8e780715c04f608ddcd0da2ffb24\",\"urls\":[\"bzz-raw://0fcc20e7ee4b32bbd2fd23d5fdda5b065d4adc5020e74f44adbfaa9eab3ea79d\",\"dweb:/ipfs/QmeK4KkJk4G2MoUQT5LsdT3WfVgAdMbRas56gKWrDQrvFF\"]},\"src/blindBackrunFL.sol\":{\"keccak256\":\"0x0fec9bbb5edbf2f1032fb95b2334a5d48be8e4cb93816f3a608021f62d2d0077\",\"urls\":[\"bzz-raw://66dbd133da6efe89a985cb3e39691d893815a29e0809de98d79d77c552720049\",\"dweb:/ipfs/QmRiqhzbRwEETPJMmc6YAJCyWPBaYiGt1bJZmgELE1kZtV\"]}},\"version\":1}",
>>>>>>> 1ff740e (style: remove unused code)
=======
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wethAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"call\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"firstPairAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"secondPairAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"percentageToPayToCoinbase\",\"type\":\"uint256\"}],\"name\":\"executeArbitrage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"firstPairData\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reserve0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserve1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isWETHZero\",\"type\":\"bool\"}],\"internalType\":\"struct IPairReserves.PairReserves\",\"name\":\"secondPairData\",\"type\":\"tuple\"}],\"name\":\"getNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"makeFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"feeAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"}],\"name\":\"receiveFlashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawWETHToOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"call(address,uint256,bytes)\":{\"details\":\"Only the contract owner can call this function.Reverted calls will result in a revert. \",\"params\":{\"_data\":\"The calldata to send with the call.\",\"_to\":\"The address of the contract to call.\",\"_value\":\"The amount of Ether to send with the call.\"}},\"executeArbitrage(address,address,uint256)\":{\"details\":\"Only the contract owner can call this function.\",\"params\":{\"firstPairAddress\":\"Address of the first Uniswap V2 pair.\",\"secondPairAddress\":\"Address of the second Uniswap V2 pair.\"}},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"params\":{\"firstPairData\":\"Struct containing data about the first Uniswap V2 pair.\",\"secondPairData\":\"Struct containing data about the second Uniswap V2 pair.\"},\"returns\":{\"_0\":\"amountIn, the optimal amount to trade to arbitrage two v2 pairs.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveFlashLoan(address[],uint256[],uint256[],bytes)\":{\"details\":\"When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"},\"withdrawWETHToOwner()\":{\"details\":\"Only the contract owner can call this function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"call(address,uint256,bytes)\":{\"notice\":\"Executes a call to another contract with the provided data and value.\"},\"executeArbitrage(address,address,uint256)\":{\"notice\":\"Executes an arbitrage transaction between two Uniswap V2 pairs.Pair addresses need to be computed off-chain.\"},\"getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))\":{\"notice\":\"Calculates the required input amount for the arbitrage transaction.\"},\"withdrawETHToOwner()\":{\"notice\":\"Transfers all ETH held by the contract to the contract owner.\"},\"withdrawWETHToOwner()\":{\"notice\":\"Transfers all WETH held by the contract to the contract owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/blindBackrunFL.sol\":\"BlindBackrunFL\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38\",\"dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f\",\"dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk\"]},\"lib/openzeppelin-contracts/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"src/BlindBackrunDebug.sol\":{\"keccak256\":\"0x827673841226ac2a1c7f1da6172767e30ab8f64607a872fe8d85054c1ce9547f\",\"urls\":[\"bzz-raw://d20601b78e58ec0fe3bf250ea18d3a871d195669e37c88b2d995d0135c6d9e47\",\"dweb:/ipfs/QmUM76dLMkX7tvwQxGZCuL2nXdqVfE92nJgFYK7Qyp5aua\"]},\"src/blindBackrunFL.sol\":{\"keccak256\":\"0x54e8ef7e52f3a1f7c89779d6109b8f80b5488065e3cd102cfc8d35e66556a4a6\",\"urls\":[\"bzz-raw://e8471a6581c7cad673898fb81f53fa2c4ee90cd0af29e9af57b2e2eae69a0b5b\",\"dweb:/ipfs/QmVzmXzXKhC7Jru2oLTtVB1RAJXtGyupRuxjVj9sAWrpfo\"]}},\"version\":1}",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_wethAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "WETH_ADDRESS",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "call"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "firstPairAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "secondPairAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "percentageToPayToCoinbase",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeArbitrage"
        },
        {
          "inputs": [
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "firstPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "secondPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAmountIn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "firstPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "secondPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDenominator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "firstPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            },
            {
              "internalType": "struct IPairReserves.PairReserves",
              "name": "secondPairData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "reserve0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "reserve1",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isWETHZero",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getNumerator",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeFlashLoan"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "feeAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "userData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveFlashLoan"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETHToOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawWETHToOwner"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "call(address,uint256,bytes)": {
            "details": "Only the contract owner can call this function.Reverted calls will result in a revert. ",
            "params": {
              "_data": "The calldata to send with the call.",
              "_to": "The address of the contract to call.",
              "_value": "The amount of Ether to send with the call."
            }
          },
          "executeArbitrage(address,address,uint256)": {
            "details": "Only the contract owner can call this function.",
            "params": {
              "firstPairAddress": "Address of the first Uniswap V2 pair.",
              "secondPairAddress": "Address of the second Uniswap V2 pair."
            }
          },
          "getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))": {
            "params": {
              "firstPairData": "Struct containing data about the first Uniswap V2 pair.",
              "secondPairData": "Struct containing data about the second Uniswap V2 pair."
            },
            "returns": {
              "_0": "amountIn, the optimal amount to trade to arbitrage two v2 pairs."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "receiveFlashLoan(address[],uint256[],uint256[],bytes)": {
            "details": "When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient. At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the Vault, or else the entire flash loan will revert. `userData` is the same value passed in the `IVault.flashLoan` call."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdrawETHToOwner()": {
            "details": "Only the contract owner can call this function."
          },
          "withdrawWETHToOwner()": {
            "details": "Only the contract owner can call this function."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "call(address,uint256,bytes)": {
            "notice": "Executes a call to another contract with the provided data and value."
          },
          "executeArbitrage(address,address,uint256)": {
            "notice": "Executes an arbitrage transaction between two Uniswap V2 pairs.Pair addresses need to be computed off-chain."
          },
          "getAmountIn((uint256,uint256,uint256,bool),(uint256,uint256,uint256,bool))": {
            "notice": "Calculates the required input amount for the arbitrage transaction."
          },
          "withdrawETHToOwner()": {
            "notice": "Transfers all ETH held by the contract to the contract owner."
          },
          "withdrawWETHToOwner()": {
            "notice": "Transfers all WETH held by the contract to the contract owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/openzeppelin-contracts/lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/blindBackrunFL.sol": "BlindBackrunFL"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0x923b9774b81c1abfb992262ae7763b6e6de77b077a7180d53c6ebb7b1c8bd648",
        "urls": [
          "bzz-raw://53445dc0431f9b45c06f567c6091da961d4087bec0010cca5bd62100fa624a38",
          "dweb:/ipfs/QmNvBYpBv183czrAqNXr76E8M3LF93ouAJFeAcHfb59Rcx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0xa80cb30fccbba7c8ff72ac82cc898576a78d4c3031e85676840048f3fe195f5d",
        "urls": [
          "bzz-raw://22fff2b2370631317e0e4bf36eabb136e96f1db5d5993c61e13b27d7615b504f",
          "dweb:/ipfs/QmfTW395az3LUhe3Gm5BUCwkaj9Sk1fURZKvHL2XzDHYQk"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "src/BlindBackrunDebug.sol": {
        "keccak256": "0x827673841226ac2a1c7f1da6172767e30ab8f64607a872fe8d85054c1ce9547f",
        "urls": [
          "bzz-raw://d20601b78e58ec0fe3bf250ea18d3a871d195669e37c88b2d995d0135c6d9e47",
          "dweb:/ipfs/QmUM76dLMkX7tvwQxGZCuL2nXdqVfE92nJgFYK7Qyp5aua"
        ],
        "license": null
      },
      "src/blindBackrunFL.sol": {
<<<<<<< HEAD
<<<<<<< HEAD
        "keccak256": "0x54e8ef7e52f3a1f7c89779d6109b8f80b5488065e3cd102cfc8d35e66556a4a6",
        "urls": [
          "bzz-raw://e8471a6581c7cad673898fb81f53fa2c4ee90cd0af29e9af57b2e2eae69a0b5b",
          "dweb:/ipfs/QmVzmXzXKhC7Jru2oLTtVB1RAJXtGyupRuxjVj9sAWrpfo"
=======
        "keccak256": "0x0fec9bbb5edbf2f1032fb95b2334a5d48be8e4cb93816f3a608021f62d2d0077",
        "urls": [
          "bzz-raw://66dbd133da6efe89a985cb3e39691d893815a29e0809de98d79d77c552720049",
          "dweb:/ipfs/QmRiqhzbRwEETPJMmc6YAJCyWPBaYiGt1bJZmgELE1kZtV"
>>>>>>> 1ff740e (style: remove unused code)
=======
        "keccak256": "0x54e8ef7e52f3a1f7c89779d6109b8f80b5488065e3cd102cfc8d35e66556a4a6",
        "urls": [
          "bzz-raw://e8471a6581c7cad673898fb81f53fa2c4ee90cd0af29e9af57b2e2eae69a0b5b",
          "dweb:/ipfs/QmVzmXzXKhC7Jru2oLTtVB1RAJXtGyupRuxjVj9sAWrpfo"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/blindBackrunFL.sol",
<<<<<<< HEAD
<<<<<<< HEAD
    "id": 30688,
    "exportedSymbols": {
      "BlindBackrun": [
        32692
      ],
      "BlindBackrunFL": [
        30687
=======
    "id": 30672,
=======
    "id": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
    "exportedSymbols": {
      "BlindBackrun": [
        32692
      ],
      "BlindBackrunFL": [
<<<<<<< HEAD
        30671
>>>>>>> 1ff740e (style: remove unused code)
=======
        30687
>>>>>>> 70cb35e (feat: add new compiled solidity files)
      ],
      "Context": [
        824
      ],
      "IERC20": [
        777
      ],
      "IFlashLoanRecipient": [
        30568
      ],
      "IPairReserves": [
<<<<<<< HEAD
<<<<<<< HEAD
        31757
      ],
      "IUniswapV2Pair": [
        31747
=======
        31713
      ],
      "IUniswapV2Pair": [
        31703
>>>>>>> 1ff740e (style: remove unused code)
=======
        31757
      ],
      "IUniswapV2Pair": [
        31747
>>>>>>> 70cb35e (feat: add new compiled solidity files)
      ],
      "IVault": [
        30551
      ],
      "IWETH": [
<<<<<<< HEAD
<<<<<<< HEAD
        31716
=======
        31672
>>>>>>> 1ff740e (style: remove unused code)
=======
        31716
>>>>>>> 70cb35e (feat: add new compiled solidity files)
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        1136
      ],
      "console": [
        21238
      ]
    },
    "nodeType": "SourceUnit",
<<<<<<< HEAD
<<<<<<< HEAD
    "src": "0:2396:26",
=======
    "src": "0:2385:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
    "src": "0:2396:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
    "nodes": [
      {
        "id": 30530,
        "nodeType": "PragmaDirective",
        "src": "0:23:26",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 30531,
        "nodeType": "ImportDirective",
        "src": "25:45:26",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "sourceUnit": 778,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30532,
        "nodeType": "ImportDirective",
        "src": "71:41:26",
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "sourceUnit": 113,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30533,
        "nodeType": "ImportDirective",
        "src": "113:46:26",
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeMath.sol",
        "file": "openzeppelin/utils/math/SafeMath.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "sourceUnit": 1137,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30534,
        "nodeType": "ImportDirective",
        "src": "160:31:26",
        "absolutePath": "lib/openzeppelin-contracts/lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "sourceUnit": 21239,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30535,
        "nodeType": "ImportDirective",
        "src": "192:33:26",
        "absolutePath": "src/BlindBackrunDebug.sol",
        "file": "./BlindBackrunDebug.sol",
        "nameLocation": "-1:-1:-1",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
        "sourceUnit": 32693,
=======
        "scope": 30672,
        "sourceUnit": 32633,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
        "sourceUnit": 32693,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 30551,
        "nodeType": "ContractDefinition",
        "src": "227:195:26",
        "nodes": [
          {
            "id": 30550,
            "nodeType": "FunctionDefinition",
            "src": "250:170:26",
            "functionSelector": "5c38449e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "flashLoan",
            "nameLocation": "259:9:26",
            "parameters": {
              "id": 30548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30538,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "298:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30550,
                  "src": "278:29:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFlashLoanRecipient_$30568",
                    "typeString": "contract IFlashLoanRecipient"
                  },
                  "typeName": {
                    "id": 30537,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30536,
                      "name": "IFlashLoanRecipient",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30568,
                      "src": "278:19:26"
                    },
                    "referencedDeclaration": 30568,
                    "src": "278:19:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlashLoanRecipient_$30568",
                      "typeString": "contract IFlashLoanRecipient"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30542,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "333:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30550,
                  "src": "317:22:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30540,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30539,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 777,
                        "src": "317:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "317:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$777",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 30541,
                    "nodeType": "ArrayTypeName",
                    "src": "317:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30545,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "366:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30550,
                  "src": "349:24:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30543,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "349:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30544,
                    "nodeType": "ArrayTypeName",
                    "src": "349:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30547,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "396:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30550,
                  "src": "383:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30546,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "268:142:26"
            },
            "returnParameters": {
              "id": 30549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "419:0:26"
            },
            "scope": 30551,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IVault",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          30551
        ],
        "name": "IVault",
        "nameLocation": "237:6:26",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "usedErrors": []
      },
      {
        "id": 30568,
        "nodeType": "ContractDefinition",
        "src": "424:714:26",
        "nodes": [
          {
            "id": 30567,
            "nodeType": "FunctionDefinition",
            "src": "961:175:26",
            "documentation": {
              "id": 30552,
              "nodeType": "StructuredDocumentation",
              "src": "460:496:26",
              "text": " @dev When `flashLoan` is called on the Vault, it invokes the `receiveFlashLoan` hook on the recipient.\n At the time of the call, the Vault will have transferred `amounts` for `tokens` to the recipient. Before this\n call returns, the recipient must have transferred `amounts` plus `feeAmounts` for each token back to the\n Vault, or else the entire flash loan will revert.\n `userData` is the same value passed in the `IVault.flashLoan` call."
            },
            "functionSelector": "f04f2707",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "receiveFlashLoan",
            "nameLocation": "970:16:26",
            "parameters": {
              "id": 30565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30556,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1012:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30567,
                  "src": "996:22:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30554,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30553,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 777,
                        "src": "996:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "996:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$777",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 30555,
                    "nodeType": "ArrayTypeName",
                    "src": "996:8:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30559,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1045:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30567,
                  "src": "1028:24:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30557,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1028:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30558,
                    "nodeType": "ArrayTypeName",
                    "src": "1028:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30562,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "1079:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30567,
                  "src": "1062:27:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30560,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1062:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30561,
                    "nodeType": "ArrayTypeName",
                    "src": "1062:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30564,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "1112:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30567,
                  "src": "1099:21:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30563,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1099:5:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "986:140:26"
            },
            "returnParameters": {
              "id": 30566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:0:26"
            },
            "scope": 30568,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFlashLoanRecipient",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          30568
        ],
        "name": "IFlashLoanRecipient",
        "nameLocation": "434:19:26",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
        "usedErrors": []
      },
      {
        "id": 30687,
        "nodeType": "ContractDefinition",
        "src": "1140:1255:26",
=======
        "scope": 30672,
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "usedErrors": []
      },
      {
        "id": 30687,
        "nodeType": "ContractDefinition",
<<<<<<< HEAD
        "src": "1140:1244:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
        "src": "1140:1255:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "nodes": [
          {
            "id": 30578,
            "nodeType": "VariableDeclaration",
            "src": "1207:90:26",
            "constant": true,
            "mutability": "constant",
            "name": "vault",
            "nameLocation": "1231:5:26",
<<<<<<< HEAD
<<<<<<< HEAD
            "scope": 30687,
=======
            "scope": 30671,
>>>>>>> 1ff740e (style: remove unused code)
=======
            "scope": 30687,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVault_$30551",
              "typeString": "contract IVault"
            },
            "typeName": {
              "id": 30574,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 30573,
                "name": "IVault",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30551,
                "src": "1207:6:26"
              },
              "referencedDeclaration": 30551,
              "src": "1207:6:26",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$30551",
                "typeString": "contract IVault"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307842413132323232323232323238643842613434353935386137356130373034643536364246324338",
                  "id": 30576,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1254:42:26",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xBA12222222228d8Ba445958a75a0704d566BF2C8"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 30575,
                "name": "IVault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 30551,
                "src": "1247:6:26",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IVault_$30551_$",
                  "typeString": "type(contract IVault)"
                }
              },
              "id": 30577,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1247:50:26",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVault_$30551",
                "typeString": "contract IVault"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30587,
            "nodeType": "FunctionDefinition",
<<<<<<< HEAD
<<<<<<< HEAD
            "src": "1304:63:26",
=======
            "src": "1296:63:26",
>>>>>>> 1ff740e (style: remove unused code)
            "body": {
              "id": 30586,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1365:2:26",
=======
              "src": "1357:2:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
            "src": "1304:63:26",
            "body": {
              "id": 30586,
              "nodeType": "Block",
              "src": "1365:2:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 30583,
                    "name": "_wethAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
<<<<<<< HEAD
<<<<<<< HEAD
                    "referencedDeclaration": 30580,
                    "src": "1351:12:26",
=======
                    "referencedDeclaration": 30564,
                    "src": "1343:12:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "referencedDeclaration": 30580,
                    "src": "1351:12:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 30584,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 30582,
                  "name": "BlindBackrun",
                  "nodeType": "IdentifierPath",
<<<<<<< HEAD
<<<<<<< HEAD
                  "referencedDeclaration": 32692,
                  "src": "1338:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1338:26:26"
=======
                  "referencedDeclaration": 32632,
                  "src": "1330:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1330:26:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "referencedDeclaration": 32692,
                  "src": "1338:12:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1338:26:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 30581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30580,
                  "mutability": "mutable",
                  "name": "_wethAddress",
<<<<<<< HEAD
<<<<<<< HEAD
                  "nameLocation": "1324:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30587,
                  "src": "1316:20:26",
=======
                  "nameLocation": "1316:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30571,
                  "src": "1308:20:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "nameLocation": "1324:12:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30587,
                  "src": "1316:20:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30579,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1316:7:26",
=======
                    "src": "1308:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1316:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1315:22:26"
=======
              "src": "1307:22:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
              "src": "1315:22:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            },
            "returnParameters": {
              "id": 30585,
              "nodeType": "ParameterList",
              "parameters": [],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1365:0:26"
            },
            "scope": 30687,
=======
              "src": "1357:0:26"
            },
            "scope": 30671,
>>>>>>> 1ff740e (style: remove unused code)
=======
              "src": "1365:0:26"
            },
            "scope": 30687,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 30611,
            "nodeType": "FunctionDefinition",
            "src": "1373:210:26",
            "body": {
              "id": 30610,
              "nodeType": "Block",
              "src": "1518:65:26",
=======
            "id": 30595,
=======
            "id": 30611,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "nodeType": "FunctionDefinition",
            "src": "1373:210:26",
            "body": {
              "id": 30610,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1510:65:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
              "src": "1518:65:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30604,
=======
                        "id": 30588,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30604,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1544:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30687",
=======
                        "src": "1536:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30671",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1544:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30687",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeString": "contract BlindBackrunFL"
                        }
                      },
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30605,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30591,
                        "src": "1550:6:26",
=======
                        "id": 30589,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30575,
                        "src": "1542:6:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30605,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30591,
                        "src": "1550:6:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30606,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30594,
                        "src": "1558:7:26",
=======
                        "id": 30590,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30578,
                        "src": "1550:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30606,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30594,
                        "src": "1558:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30607,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30596,
                        "src": "1567:8:26",
=======
                        "id": 30591,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30580,
                        "src": "1559:8:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30607,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30596,
                        "src": "1567:8:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
<<<<<<< HEAD
<<<<<<< HEAD
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30687",
=======
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30671",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "typeIdentifier": "t_contract$_BlindBackrunFL_$30687",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeString": "contract BlindBackrunFL"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30601,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30578,
                        "src": "1528:5:26",
=======
                        "id": 30585,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30562,
                        "src": "1520:5:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30601,
                        "name": "vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30578,
                        "src": "1528:5:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVault_$30551",
                          "typeString": "contract IVault"
                        }
                      },
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30603,
=======
                      "id": 30587,
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30603,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
<<<<<<< HEAD
                      "referencedDeclaration": 30550,
                      "src": "1528:15:26",
=======
                      "referencedDeclaration": 30534,
                      "src": "1520:15:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "referencedDeclaration": 30550,
                      "src": "1528:15:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IFlashLoanRecipient_$30568_$_t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract IFlashLoanRecipient,contract IERC20[] memory,uint256[] memory,bytes memory) external"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30608,
=======
                    "id": 30592,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30608,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1528:48:26",
=======
                    "src": "1520:48:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1528:48:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30609,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:48:26"
=======
                  "id": 30593,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:48:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "id": 30609,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:48:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                }
              ]
            },
            "functionSelector": "c9a69562",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
<<<<<<< HEAD
<<<<<<< HEAD
                "id": 30599,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30598,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1508:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1508:9:26"
              }
            ],
            "name": "makeFlashLoan",
            "nameLocation": "1382:13:26",
=======
                "id": 30583,
=======
                "id": 30599,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 30598,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "1508:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "1508:9:26"
              }
            ],
            "name": "makeFlashLoan",
<<<<<<< HEAD
            "nameLocation": "1374:13:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
            "nameLocation": "1382:13:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "parameters": {
              "id": 30597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30591,
                  "mutability": "mutable",
                  "name": "tokens",
<<<<<<< HEAD
<<<<<<< HEAD
                  "nameLocation": "1421:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1405:22:26",
=======
                  "nameLocation": "1413:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30595,
                  "src": "1397:22:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "nameLocation": "1421:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1405:22:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30589,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30588,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 777,
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1405:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "1405:6:26",
=======
                        "src": "1397:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "1397:6:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1405:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "1405:6:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$777",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 30590,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1405:8:26",
=======
                    "src": "1397:8:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1405:8:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30594,
                  "mutability": "mutable",
                  "name": "amounts",
<<<<<<< HEAD
<<<<<<< HEAD
                  "nameLocation": "1454:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1437:24:26",
=======
                  "nameLocation": "1446:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30595,
                  "src": "1429:24:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "nameLocation": "1454:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1437:24:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30592,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1437:7:26",
=======
                      "src": "1429:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "1437:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30593,
                    "nodeType": "ArrayTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1437:9:26",
=======
                    "src": "1429:9:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1437:9:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30596,
                  "mutability": "mutable",
                  "name": "userData",
<<<<<<< HEAD
<<<<<<< HEAD
                  "nameLocation": "1484:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1471:21:26",
=======
                  "nameLocation": "1476:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30595,
                  "src": "1463:21:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "nameLocation": "1484:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30611,
                  "src": "1471:21:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 30595,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1471:5:26",
=======
                    "src": "1463:5:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1471:5:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1395:103:26"
            },
            "returnParameters": {
              "id": 30600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:26"
            },
            "scope": 30687,
=======
              "src": "1387:103:26"
=======
              "src": "1395:103:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            },
            "returnParameters": {
              "id": 30600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1518:0:26"
            },
<<<<<<< HEAD
            "scope": 30671,
>>>>>>> 1ff740e (style: remove unused code)
=======
            "scope": 30687,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
<<<<<<< HEAD
<<<<<<< HEAD
            "id": 30686,
            "nodeType": "FunctionDefinition",
            "src": "1589:804:26",
            "body": {
              "id": 30685,
              "nodeType": "Block",
              "src": "1764:629:26",
=======
            "id": 30670,
=======
            "id": 30686,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "nodeType": "FunctionDefinition",
            "src": "1589:804:26",
            "body": {
              "id": 30685,
              "nodeType": "Block",
<<<<<<< HEAD
              "src": "1756:625:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
              "src": "1764:629:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30633,
=======
                        "id": 30617,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30633,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30627,
=======
                            "id": 30611,
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "id": 30627,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1795:3:26",
=======
                            "src": "1774:3:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "src": "1795:3:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
<<<<<<< HEAD
<<<<<<< HEAD
                          "id": 30628,
=======
                          "id": 30612,
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "id": 30628,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1795:10:26",
=======
                          "src": "1774:10:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "src": "1795:10:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
<<<<<<< HEAD
<<<<<<< HEAD
                              "id": 30631,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30578,
                              "src": "1817:5:26",
=======
                              "id": 30615,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30562,
                              "src": "1796:5:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                              "id": 30631,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30578,
                              "src": "1817:5:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVault_$30551",
                                "typeString": "contract IVault"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IVault_$30551",
                                "typeString": "contract IVault"
                              }
                            ],
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30630,
=======
                            "id": 30614,
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "id": 30630,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "1809:7:26",
=======
                            "src": "1788:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "src": "1809:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                              "id": 30629,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1809:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 30632,
=======
                              "id": 30613,
=======
                              "id": 30629,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1809:7:26",
                              "typeDescriptions": {}
                            }
                          },
<<<<<<< HEAD
                          "id": 30616,
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "id": 30632,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "1809:14:26",
=======
                          "src": "1788:14:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "src": "1809:14:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1795:28:26",
=======
                        "src": "1774:28:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1795:28:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466c6173684c6f616e526563697069656e743a2063616c6c6572206973206e6f7420746865207661756c74",
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30634,
=======
                        "id": 30618,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30634,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1837:45:26",
=======
                        "src": "1804:45:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1837:45:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f31b4f6d08b07b44b6c6f09cb866661e71ab79b49d3cbdc3ea1d936d7a195c5",
                          "typeString": "literal_string \"FlashLoanRecipient: caller is not the vault\""
                        },
                        "value": "FlashLoanRecipient: caller is not the vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f31b4f6d08b07b44b6c6f09cb866661e71ab79b49d3cbdc3ea1d936d7a195c5",
                          "typeString": "literal_string \"FlashLoanRecipient: caller is not the vault\""
                        }
                      ],
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30626,
=======
                      "id": 30610,
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30626,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1774:7:26",
=======
                      "src": "1766:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "1774:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30635,
=======
                    "id": 30619,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30635,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1774:118:26",
=======
                    "src": "1766:84:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1774:118:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30636,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:118:26"
=======
                  "id": 30620,
                  "nodeType": "ExpressionStatement",
                  "src": "1766:84:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "id": 30636,
                  "nodeType": "ExpressionStatement",
                  "src": "1774:118:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "72656365697665466c6173684c6f616e",
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30640,
=======
                        "id": 30624,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30640,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1914:18:26",
=======
                        "src": "1872:18:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1914:18:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27450447a722857c82dc181a2b9d6ec0901f6e70c829b880a785a5a29f55b5dd",
                          "typeString": "literal_string \"receiveFlashLoan\""
                        },
                        "value": "receiveFlashLoan"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_27450447a722857c82dc181a2b9d6ec0901f6e70c829b880a785a5a29f55b5dd",
                          "typeString": "literal_string \"receiveFlashLoan\""
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30637,
=======
                        "id": 30621,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30637,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21238,
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "1902:7:26",
=======
                        "src": "1860:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "1902:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21238_$",
                          "typeString": "type(library console)"
                        }
                      },
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30639,
=======
                      "id": 30623,
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30639,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13769,
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "1902:11:26",
=======
                      "src": "1860:11:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "1902:11:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30641,
=======
                    "id": 30625,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30641,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "1902:31:26",
=======
                    "src": "1860:31:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "1902:31:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30642,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:31:26"
                },
                {
                  "assignments": [
                    30644,
                    30646,
                    30648
=======
                  "id": 30626,
=======
                  "id": 30642,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "nodeType": "ExpressionStatement",
                  "src": "1902:31:26"
                },
                {
                  "assignments": [
<<<<<<< HEAD
                    30628,
                    30630,
                    30632
>>>>>>> 1ff740e (style: remove unused code)
=======
                    30644,
                    30646,
                    30648
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  ],
                  "declarations": [
                    {
                      "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "id": 30644,
                      "mutability": "mutable",
                      "name": "firstPairAddress",
                      "nameLocation": "1966:16:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 30685,
                      "src": "1958:24:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30643,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1958:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30646,
                      "mutability": "mutable",
                      "name": "secondPairAddress",
                      "nameLocation": "2004:17:26",
<<<<<<< HEAD
                      "nodeType": "VariableDeclaration",
                      "scope": 30685,
                      "src": "1996:25:26",
=======
                      "id": 30628,
                      "mutability": "mutable",
                      "name": "firstPairAddress",
                      "nameLocation": "1924:16:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 30669,
                      "src": "1916:24:26",
>>>>>>> 1ff740e (style: remove unused code)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                        "src": "1996:7:26",
=======
                        "src": "1916:7:26",
>>>>>>> 1ff740e (style: remove unused code)
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30648,
                      "mutability": "mutable",
<<<<<<< HEAD
                      "name": "percentageToPayToCoinbase",
                      "nameLocation": "2043:25:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 30685,
                      "src": "2035:33:26",
=======
                      "name": "secondPairAddress",
                      "nameLocation": "1962:17:26",
=======
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "nodeType": "VariableDeclaration",
                      "scope": 30685,
                      "src": "1996:25:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 30645,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1996:7:26",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 30648,
                      "mutability": "mutable",
                      "name": "percentageToPayToCoinbase",
                      "nameLocation": "2043:25:26",
                      "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                      "scope": 30669,
                      "src": "1993:33:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "scope": 30685,
                      "src": "2035:33:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:7:26",
=======
                        "id": 30631,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1993:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2035:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30660,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30651,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30623,
                        "src": "2092:8:26",
=======
                  "id": 30644,
=======
                  "id": 30660,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30651,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
<<<<<<< HEAD
                        "referencedDeclaration": 30607,
                        "src": "2080:8:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "referencedDeclaration": 30623,
                        "src": "2092:8:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30653,
=======
                            "id": 30653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2103:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2103:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 30655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2112:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30654,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2112:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 30657,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2103:7:26",
                            "typeDescriptions": {
<<<<<<< HEAD
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2103:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 30655,
=======
                            "id": 30637,
>>>>>>> 1ff740e (style: remove unused code)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2112:7:26",
=======
                            "src": "2121:7:26",
>>>>>>> 1ff740e (style: remove unused code)
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30654,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
<<<<<<< HEAD
                              "src": "2112:7:26",
=======
                              "src": "2121:7:26",
>>>>>>> 1ff740e (style: remove unused code)
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 30657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
                            "src": "2121:7:26",
=======
                            "src": "2146:7:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 30638,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2146:7:26",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 30641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2171:7:26",
>>>>>>> 1ff740e (style: remove unused code)
                            "typeDescriptions": {
=======
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                              "id": 30656,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2121:7:26",
=======
                              "id": 30640,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2171:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                              "id": 30656,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2121:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                              "typeDescriptions": {}
                            }
                          }
                        ],
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30658,
=======
                        "id": 30642,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30658,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "2102:27:26",
=======
                        "src": "2103:89:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "2102:27:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(uint256))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$",
                          "typeString": "tuple(type(address),type(address),type(uint256))"
                        }
                      ],
                      "expression": {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30649,
=======
                        "id": 30633,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30649,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "2081:3:26",
=======
                        "src": "2052:3:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "2081:3:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30650,
=======
                      "id": 30634,
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30650,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "2081:10:26",
=======
                      "src": "2052:10:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "2081:10:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30659,
=======
                    "id": 30643,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30659,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "2081:49:26",
=======
                    "src": "2052:150:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "2081:49:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_payable_$_t_address_payable_$_t_uint256_$",
                      "typeString": "tuple(address payable,address payable,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
<<<<<<< HEAD
<<<<<<< HEAD
                  "src": "1944:186:26"
=======
                  "src": "1902:300:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "src": "1944:186:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                },
                {
                  "expression": {
                    "arguments": [
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30662,
                        "name": "secondPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30646,
                        "src": "2171:17:26",
=======
                        "id": 30646,
                        "name": "secondPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30630,
                        "src": "2229:17:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30662,
                        "name": "secondPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30646,
                        "src": "2171:17:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30663,
                        "name": "firstPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30644,
                        "src": "2202:16:26",
=======
                        "id": 30647,
                        "name": "firstPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30628,
                        "src": "2248:16:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30663,
                        "name": "firstPairAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30644,
                        "src": "2202:16:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30664,
                        "name": "percentageToPayToCoinbase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30648,
                        "src": "2232:25:26",
=======
                        "id": 30648,
                        "name": "percentageToPayToCoinbase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30632,
                        "src": "2266:25:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30664,
                        "name": "percentageToPayToCoinbase",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30648,
                        "src": "2232:25:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30661,
                      "name": "executeArbitrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32176,
                      "src": "2141:16:26",
=======
                      "id": 30645,
                      "name": "executeArbitrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32116,
                      "src": "2212:16:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30661,
                      "name": "executeArbitrage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32176,
                      "src": "2141:16:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30665,
=======
                    "id": 30649,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30665,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "2141:126:26",
=======
                    "src": "2212:80:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "2141:126:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30666,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:126:26"
=======
                  "id": 30650,
                  "nodeType": "ExpressionStatement",
                  "src": "2212:80:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "id": 30666,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:126:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30673,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30578,
                            "src": "2328:5:26",
=======
                            "id": 30657,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30562,
                            "src": "2339:5:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "id": 30673,
                            "name": "vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30578,
                            "src": "2328:5:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVault_$30551",
                              "typeString": "contract IVault"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVault_$30551",
                              "typeString": "contract IVault"
                            }
                          ],
<<<<<<< HEAD
<<<<<<< HEAD
                          "id": 30672,
=======
                          "id": 30656,
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "id": 30672,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "2320:7:26",
=======
                          "src": "2331:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "src": "2320:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2320:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 30674,
=======
                            "id": 30655,
=======
                            "id": 30671,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2320:7:26",
                            "typeDescriptions": {}
                          }
                        },
<<<<<<< HEAD
                        "id": 30658,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30674,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "2320:14:26",
=======
                        "src": "2331:14:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "2320:14:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "id": 30682,
=======
                        "id": 30666,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30682,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30675,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30618,
                            "src": "2348:7:26",
=======
                            "id": 30659,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30602,
                            "src": "2347:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "id": 30675,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30618,
                            "src": "2348:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
<<<<<<< HEAD
<<<<<<< HEAD
                          "id": 30677,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 30676,
=======
                          "id": 30661,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 30660,
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "id": 30677,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 30676,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
<<<<<<< HEAD
<<<<<<< HEAD
                            "src": "2356:1:26",
=======
                            "src": "2355:1:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "src": "2356:1:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "2348:10:26",
=======
                          "src": "2347:10:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "src": "2348:10:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "components": [
                            {
                              "baseExpression": {
<<<<<<< HEAD
<<<<<<< HEAD
                                "id": 30678,
                                "name": "feeAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30621,
                                "src": "2362:10:26",
=======
                                "id": 30662,
                                "name": "feeAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30605,
                                "src": "2359:10:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                                "id": 30678,
                                "name": "feeAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30621,
                                "src": "2362:10:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
<<<<<<< HEAD
<<<<<<< HEAD
                              "id": 30680,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 30679,
=======
                              "id": 30664,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 30663,
>>>>>>> 1ff740e (style: remove unused code)
=======
                              "id": 30680,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 30679,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
<<<<<<< HEAD
<<<<<<< HEAD
                                "src": "2373:1:26",
=======
                                "src": "2370:1:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                                "src": "2373:1:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
<<<<<<< HEAD
<<<<<<< HEAD
                              "src": "2362:13:26",
=======
                              "src": "2359:13:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                              "src": "2362:13:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
<<<<<<< HEAD
<<<<<<< HEAD
                          "id": 30681,
=======
                          "id": 30665,
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "id": 30681,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
<<<<<<< HEAD
<<<<<<< HEAD
                          "src": "2361:15:26",
=======
                          "src": "2358:15:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                          "src": "2361:15:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "2348:28:26",
=======
                        "src": "2347:26:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "src": "2348:28:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
<<<<<<< HEAD
<<<<<<< HEAD
                            "id": 30668,
                            "name": "WETH_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31767,
                            "src": "2284:12:26",
=======
                            "id": 30652,
                            "name": "WETH_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31723,
                            "src": "2308:12:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                            "id": 30668,
                            "name": "WETH_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31767,
                            "src": "2284:12:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
<<<<<<< HEAD
<<<<<<< HEAD
                          "id": 30667,
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31716,
                          "src": "2278:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$31716_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
                        "id": 30669,
=======
                          "id": 30651,
=======
                          "id": 30667,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                          "name": "IWETH",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31716,
                          "src": "2278:5:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IWETH_$31716_$",
                            "typeString": "type(contract IWETH)"
                          }
                        },
<<<<<<< HEAD
                        "id": 30653,
>>>>>>> 1ff740e (style: remove unused code)
=======
                        "id": 30669,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                        "src": "2278:19:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$31716",
                          "typeString": "contract IWETH"
                        }
                      },
                      "id": 30670,
=======
                        "src": "2302:19:26",
=======
                        "src": "2278:19:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWETH_$31716",
                          "typeString": "contract IWETH"
                        }
                      },
<<<<<<< HEAD
                      "id": 30654,
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30670,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 744,
<<<<<<< HEAD
<<<<<<< HEAD
                      "src": "2278:28:26",
=======
                      "src": "2302:28:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "2278:28:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30683,
=======
                    "id": 30667,
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30683,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
<<<<<<< HEAD
<<<<<<< HEAD
                    "src": "2278:108:26",
=======
                    "src": "2302:72:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "src": "2278:108:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30684,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:108:26"
=======
                  "id": 30668,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:72:26"
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "id": 30684,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:108:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                }
              ]
            },
            "baseFunctions": [
              30567
            ],
            "functionSelector": "f04f2707",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "receiveFlashLoan",
<<<<<<< HEAD
<<<<<<< HEAD
            "nameLocation": "1598:16:26",
            "parameters": {
              "id": 30624,
=======
            "nameLocation": "1590:16:26",
            "parameters": {
              "id": 30608,
>>>>>>> 1ff740e (style: remove unused code)
=======
            "nameLocation": "1598:16:26",
            "parameters": {
              "id": 30624,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30615,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1640:6:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30686,
                  "src": "1624:22:26",
=======
                  "id": 30599,
=======
                  "id": 30615,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "1640:6:26",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 30670,
                  "src": "1616:22:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "scope": 30686,
                  "src": "1624:22:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_memory_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30613,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30612,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 777,
                        "src": "1624:6:26"
                      },
                      "referencedDeclaration": 777,
                      "src": "1624:6:26",
=======
                      "id": 30597,
=======
                      "id": 30613,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 30612,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 777,
                        "src": "1624:6:26"
                      },
                      "referencedDeclaration": 777,
<<<<<<< HEAD
                      "src": "1616:6:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "src": "1624:6:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$777",
                        "typeString": "contract IERC20"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30614,
                    "nodeType": "ArrayTypeName",
                    "src": "1624:8:26",
=======
                    "id": 30598,
                    "nodeType": "ArrayTypeName",
                    "src": "1616:8:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30614,
                    "nodeType": "ArrayTypeName",
                    "src": "1624:8:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$777_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
<<<<<<< HEAD
<<<<<<< HEAD
                  "id": 30618,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1673:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30686,
                  "src": "1656:24:26",
=======
                  "id": 30602,
=======
                  "id": 30618,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "1673:7:26",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 30670,
                  "src": "1648:24:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "scope": 30686,
                  "src": "1656:24:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
<<<<<<< HEAD
<<<<<<< HEAD
                      "id": 30616,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1656:7:26",
=======
                      "id": 30600,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1648:7:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                      "id": 30616,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1656:7:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "id": 30617,
                    "nodeType": "ArrayTypeName",
                    "src": "1656:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30621,
                  "mutability": "mutable",
                  "name": "feeAmounts",
                  "nameLocation": "1707:10:26",
<<<<<<< HEAD
                  "nodeType": "VariableDeclaration",
                  "scope": 30686,
                  "src": "1690:27:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30619,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1690:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30620,
                    "nodeType": "ArrayTypeName",
                    "src": "1690:9:26",
=======
                    "id": 30601,
                    "nodeType": "ArrayTypeName",
                    "src": "1648:9:26",
>>>>>>> 1ff740e (style: remove unused code)
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30623,
                  "mutability": "mutable",
<<<<<<< HEAD
                  "name": "userData",
                  "nameLocation": "1740:8:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 30686,
                  "src": "1727:21:26",
=======
                  "name": "feeAmounts",
                  "nameLocation": "1699:10:26",
=======
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "nodeType": "VariableDeclaration",
                  "scope": 30686,
                  "src": "1690:27:26",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 30619,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1690:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 30620,
                    "nodeType": "ArrayTypeName",
                    "src": "1690:9:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30623,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "1740:8:26",
                  "nodeType": "VariableDeclaration",
<<<<<<< HEAD
                  "scope": 30670,
                  "src": "1719:21:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                  "scope": 30686,
                  "src": "1727:21:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
<<<<<<< HEAD
<<<<<<< HEAD
                    "id": 30622,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:5:26",
=======
                    "id": 30606,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1719:5:26",
>>>>>>> 1ff740e (style: remove unused code)
=======
                    "id": 30622,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:5:26",
>>>>>>> 70cb35e (feat: add new compiled solidity files)
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
<<<<<<< HEAD
<<<<<<< HEAD
              "src": "1614:140:26"
            },
            "returnParameters": {
              "id": 30625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:0:26"
            },
            "scope": 30687,
=======
              "src": "1606:140:26"
=======
              "src": "1614:140:26"
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            },
            "returnParameters": {
              "id": 30625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1764:0:26"
            },
<<<<<<< HEAD
            "scope": 30671,
>>>>>>> 1ff740e (style: remove unused code)
=======
            "scope": 30687,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30569,
              "name": "BlindBackrun",
              "nodeType": "IdentifierPath",
<<<<<<< HEAD
<<<<<<< HEAD
              "referencedDeclaration": 32692,
=======
              "referencedDeclaration": 32632,
>>>>>>> 1ff740e (style: remove unused code)
=======
              "referencedDeclaration": 32692,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
              "src": "1167:12:26"
            },
            "id": 30570,
            "nodeType": "InheritanceSpecifier",
            "src": "1167:12:26"
          },
          {
            "baseName": {
              "id": 30571,
              "name": "IFlashLoanRecipient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30568,
              "src": "1181:19:26"
            },
            "id": 30572,
            "nodeType": "InheritanceSpecifier",
            "src": "1181:19:26"
          }
        ],
        "canonicalName": "BlindBackrunFL",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
<<<<<<< HEAD
<<<<<<< HEAD
          30687,
          30568,
          32692,
=======
          30671,
          30552,
          32632,
>>>>>>> 1ff740e (style: remove unused code)
=======
          30687,
          30568,
          32692,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
          112,
          824
        ],
        "name": "BlindBackrunFL",
        "nameLocation": "1149:14:26",
<<<<<<< HEAD
<<<<<<< HEAD
        "scope": 30688,
=======
        "scope": 30672,
>>>>>>> 1ff740e (style: remove unused code)
=======
        "scope": 30688,
>>>>>>> 70cb35e (feat: add new compiled solidity files)
        "usedErrors": []
      }
    ]
  },
  "id": 26
}